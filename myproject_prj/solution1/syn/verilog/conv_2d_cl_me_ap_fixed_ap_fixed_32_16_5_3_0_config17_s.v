// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_me_ap_fixed_ap_fixed_32_16_5_3_0_config17_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_V_dout,
        data_V_V_empty_n,
        data_V_V_read,
        res_V_V_din,
        res_V_V_full_n,
        res_V_V_write
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_pp0_stage0 = 20'd1024;
parameter    ap_ST_fsm_state26 = 20'd2048;
parameter    ap_ST_fsm_state27 = 20'd4096;
parameter    ap_ST_fsm_state28 = 20'd8192;
parameter    ap_ST_fsm_state29 = 20'd16384;
parameter    ap_ST_fsm_state30 = 20'd32768;
parameter    ap_ST_fsm_state31 = 20'd65536;
parameter    ap_ST_fsm_state32 = 20'd131072;
parameter    ap_ST_fsm_state33 = 20'd262144;
parameter    ap_ST_fsm_state34 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] data_V_V_dout;
input   data_V_V_empty_n;
output   data_V_V_read;
output  [31:0] res_V_V_din;
input   res_V_V_full_n;
output   res_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_V_read;
reg[31:0] res_V_V_din;
reg res_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [2303:0] layer_in_V;
reg   [31:0] sX_4;
reg   [31:0] sY_4;
reg   [31:0] pY_4;
reg   [31:0] pX_4;
wire   [9:0] w17_V_address0;
reg    w17_V_ce0;
wire   [14:0] w17_V_q0;
reg    data_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
reg    res_V_V_blk_n;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
reg   [0:0] and_ln215_20_reg_1087;
reg   [9:0] ir1_0_i_i_i21_reg_192;
reg   [9:0] in_index_reg_203;
reg   [31:0] tmp_V_23020_reg_214;
reg   [31:0] tmp_V_23118_reg_225;
reg   [31:0] tmp_V_23216_reg_236;
reg   [31:0] tmp_V_23314_reg_247;
reg   [31:0] tmp_V_23412_reg_258;
reg   [31:0] tmp_V_23510_reg_269;
reg   [31:0] tmp_V_2368_reg_280;
reg   [31:0] tmp_V_2376_reg_291;
reg   [19:0] phi_mul_reg_302;
reg   [31:0] tmp_V_259_reg_313;
reg   [31:0] tmp_V_258_reg_344;
reg   [31:0] tmp_V_257_reg_375;
reg   [31:0] tmp_V_256_reg_406;
reg   [31:0] tmp_V_255_reg_437;
reg   [31:0] tmp_V_254_reg_468;
reg   [31:0] tmp_V_253_reg_499;
reg   [31:0] tmp_V_252_reg_530;
reg   [31:0] tmp_V_reg_1015;
reg   [31:0] tmp_V_245_reg_1020;
reg   [31:0] tmp_V_246_reg_1025;
reg   [31:0] tmp_V_247_reg_1030;
reg   [31:0] tmp_V_248_reg_1035;
reg   [31:0] tmp_V_249_reg_1040;
reg   [31:0] tmp_V_250_reg_1045;
reg   [31:0] tmp_V_251_reg_1050;
reg   [31:0] sX_4_load_reg_1055;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln215_fu_644_p2;
reg   [0:0] icmp_ln215_reg_1060;
reg   [31:0] sY_4_load_reg_1065;
wire   [0:0] icmp_ln215_28_fu_654_p2;
reg   [0:0] icmp_ln215_28_reg_1070;
reg   [31:0] pY_4_load_reg_1075;
reg   [31:0] pX_4_load_reg_1081;
wire   [0:0] and_ln215_20_fu_712_p2;
wire   [8:0] i_fu_718_p2;
reg   [8:0] i_reg_1091;
wire   [0:0] icmp_ln532_fu_742_p2;
reg   [0:0] icmp_ln532_reg_1096;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state11_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_state13_pp0_stage0_iter2;
wire    ap_block_state14_pp0_stage0_iter3;
wire    ap_block_state15_pp0_stage0_iter4;
wire    ap_block_state16_pp0_stage0_iter5;
wire    ap_block_state17_pp0_stage0_iter6;
wire    ap_block_state18_pp0_stage0_iter7;
wire    ap_block_state19_pp0_stage0_iter8;
wire    ap_block_state20_pp0_stage0_iter9;
wire    ap_block_state21_pp0_stage0_iter10;
wire    ap_block_state22_pp0_stage0_iter11;
wire    ap_block_state23_pp0_stage0_iter12;
wire    ap_block_state24_pp0_stage0_iter13;
wire    ap_block_state25_pp0_stage0_iter14;
wire    ap_block_pp0_stage0_11001;
wire   [11:0] select_ln532_20_fu_774_p3;
reg   [11:0] select_ln532_20_reg_1101;
wire   [11:0] sub_ln532_30_fu_782_p2;
reg   [11:0] sub_ln532_30_reg_1106;
reg   [11:0] sub_ln532_30_reg_1106_pp0_iter1_reg;
reg   [11:0] sub_ln532_30_reg_1106_pp0_iter2_reg;
reg   [11:0] sub_ln532_30_reg_1106_pp0_iter3_reg;
reg   [11:0] sub_ln532_30_reg_1106_pp0_iter4_reg;
reg   [11:0] sub_ln532_30_reg_1106_pp0_iter5_reg;
reg   [11:0] sub_ln532_30_reg_1106_pp0_iter6_reg;
wire   [9:0] ir_fu_793_p2;
reg   [9:0] ir_reg_1116;
reg    ap_enable_reg_pp0_iter0;
wire   [9:0] select_ln544_fu_811_p3;
reg   [9:0] select_ln544_reg_1121;
wire   [0:0] icmp_ln514_fu_819_p2;
reg   [0:0] icmp_ln514_reg_1126;
reg   [0:0] icmp_ln514_reg_1126_pp0_iter1_reg;
reg   [0:0] icmp_ln514_reg_1126_pp0_iter2_reg;
reg   [0:0] icmp_ln514_reg_1126_pp0_iter3_reg;
reg   [0:0] icmp_ln514_reg_1126_pp0_iter4_reg;
reg   [0:0] icmp_ln514_reg_1126_pp0_iter5_reg;
reg   [0:0] icmp_ln514_reg_1126_pp0_iter6_reg;
reg   [0:0] icmp_ln514_reg_1126_pp0_iter7_reg;
reg   [0:0] icmp_ln514_reg_1126_pp0_iter8_reg;
reg   [0:0] icmp_ln514_reg_1126_pp0_iter9_reg;
reg   [0:0] icmp_ln514_reg_1126_pp0_iter10_reg;
reg   [0:0] icmp_ln514_reg_1126_pp0_iter11_reg;
reg   [0:0] icmp_ln514_reg_1126_pp0_iter12_reg;
reg   [0:0] icmp_ln514_reg_1126_pp0_iter13_reg;
reg   [14:0] w17_V_load_reg_1140;
reg   [14:0] w17_V_load_reg_1140_pp0_iter2_reg;
reg   [14:0] w17_V_load_reg_1140_pp0_iter3_reg;
reg   [14:0] w17_V_load_reg_1140_pp0_iter4_reg;
reg   [14:0] w17_V_load_reg_1140_pp0_iter5_reg;
reg   [14:0] w17_V_load_reg_1140_pp0_iter6_reg;
reg   [14:0] w17_V_load_reg_1140_pp0_iter7_reg;
wire   [2303:0] grp_fu_845_p2;
reg   [2303:0] lshr_ln532_reg_1145;
wire   [31:0] trunc_ln532_fu_865_p1;
reg   [31:0] trunc_ln532_reg_1150;
wire   [30:0] grp_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_572_ap_return;
reg   [30:0] p_0_reg_1155;
wire   [19:0] add_ln521_fu_869_p2;
reg    ap_enable_reg_pp0_iter14;
wire   [0:0] icmp_ln237_fu_924_p2;
reg   [0:0] icmp_ln237_reg_1168;
reg    ap_block_state33;
wire   [31:0] select_ln252_fu_945_p3;
reg   [31:0] select_ln252_reg_1172;
wire   [0:0] icmp_ln241_fu_964_p2;
reg   [0:0] icmp_ln241_reg_1177;
wire   [31:0] select_ln247_fu_985_p3;
reg   [31:0] select_ln247_reg_1181;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_fu_578_ap_start;
wire    call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_fu_578_ap_done;
wire    call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_fu_578_ap_idle;
wire    call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_fu_578_ap_ready;
wire   [255:0] call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_fu_578_data_V_read;
wire   [2303:0] call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_fu_578_ap_return;
reg   [8:0] i_0_i22_reg_180;
reg    ap_block_state1;
wire    ap_CS_fsm_state34;
wire   [0:0] icmp_ln206_fu_1009_p2;
reg   [9:0] ap_phi_mux_ir1_0_i_i_i21_phi_fu_196_p4;
wire    ap_block_pp0_stage0;
reg   [9:0] ap_phi_mux_in_index_phi_fu_207_p4;
reg   [31:0] ap_phi_mux_tmp_V_252_phi_fu_535_p16;
reg   [31:0] ap_phi_mux_tmp_V_253_phi_fu_504_p16;
reg   [31:0] ap_phi_mux_tmp_V_254_phi_fu_473_p16;
reg   [31:0] ap_phi_mux_tmp_V_255_phi_fu_442_p16;
reg   [31:0] ap_phi_mux_tmp_V_256_phi_fu_411_p16;
reg   [31:0] ap_phi_mux_tmp_V_257_phi_fu_380_p16;
reg   [31:0] ap_phi_mux_tmp_V_258_phi_fu_349_p16;
reg   [31:0] ap_phi_mux_tmp_V_259_phi_fu_318_p16;
wire   [31:0] acc_0_V_fu_910_p2;
wire   [31:0] ap_phi_reg_pp0_iter14_tmp_V_259_reg_313;
wire   [2:0] trunc_ln_fu_875_p4;
wire   [31:0] ap_phi_reg_pp0_iter14_tmp_V_258_reg_344;
wire   [31:0] ap_phi_reg_pp0_iter14_tmp_V_257_reg_375;
wire   [31:0] ap_phi_reg_pp0_iter14_tmp_V_256_reg_406;
wire   [31:0] ap_phi_reg_pp0_iter14_tmp_V_255_reg_437;
wire   [31:0] ap_phi_reg_pp0_iter14_tmp_V_254_reg_468;
wire   [31:0] ap_phi_reg_pp0_iter14_tmp_V_253_reg_499;
wire   [31:0] ap_phi_reg_pp0_iter14_tmp_V_252_reg_530;
reg   [31:0] ap_phi_mux_storemerge_i_phi_fu_565_p4;
reg   [31:0] storemerge_i_reg_561;
wire   [63:0] zext_ln532_fu_788_p1;
wire   [31:0] add_ln245_fu_969_p2;
wire   [31:0] add_ln250_fu_929_p2;
wire   [30:0] tmp_29_fu_664_p4;
wire   [30:0] tmp_31_fu_684_p4;
wire   [0:0] icmp_ln215_29_fu_674_p2;
wire   [0:0] icmp_ln215_30_fu_694_p2;
wire   [0:0] and_ln215_19_fu_706_p2;
wire   [0:0] and_ln215_fu_700_p2;
wire   [6:0] empty_238_fu_724_p1;
wire   [11:0] tmp_s_fu_728_p3;
wire   [11:0] empty_239_fu_736_p2;
wire   [11:0] sub_ln532_fu_748_p2;
wire   [11:0] sub_ln532_29_fu_760_p2;
wire   [11:0] sub_ln532_28_fu_754_p2;
wire   [11:0] select_ln532_fu_766_p3;
wire   [9:0] add_ln544_fu_799_p2;
wire   [0:0] icmp_ln544_fu_805_p2;
reg   [2303:0] tmp_32_fu_825_p4;
wire   [2303:0] grp_fu_845_p0;
wire   [2303:0] grp_fu_845_p1;
wire   [2303:0] zext_ln532_20_fu_851_p1;
wire   [2303:0] lshr_ln532_10_fu_854_p2;
wire   [2303:0] and_ln532_fu_860_p2;
wire   [2:0] tmp_1_fu_885_p9;
wire  signed [31:0] sext_ln703_fu_907_p1;
wire   [31:0] tmp_1_fu_885_p10;
wire   [31:0] add_ln252_fu_940_p2;
wire   [31:0] add_ln247_fu_980_p2;
reg   [19:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_368;
reg    ap_condition_377;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 20'd1;
#0 layer_in_V = 2304'd0;
#0 sX_4 = 32'd0;
#0 sY_4 = 32'd0;
#0 pY_4 = 32'd0;
#0 pX_4 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
end

conv_2d_cl_me_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_w17jG #(
    .DataWidth( 15 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
w17_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w17_V_address0),
    .ce0(w17_V_ce0),
    .q0(w17_V_q0)
);

product_dense_ap_fixed_ap_fixed_ap_fixed_s grp_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_572(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .a_V(trunc_ln532_reg_1150),
    .w_V(w17_V_load_reg_1140_pp0_iter7_reg),
    .ap_return(grp_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_572_ap_return)
);

cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_fu_578(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_fu_578_ap_start),
    .ap_done(call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_fu_578_ap_done),
    .ap_idle(call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_fu_578_ap_idle),
    .ap_ready(call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_fu_578_ap_ready),
    .data_V_read(call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_fu_578_data_V_read),
    .output_V_read(layer_in_V),
    .ap_return(call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_fu_578_ap_return)
);

myproject_axi_lshr_2304ns_12ns_2304_6_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .OP( 1 ),
    .din0_WIDTH( 2304 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 2304 ))
myproject_axi_lshr_2304ns_12ns_2304_6_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_845_p0),
    .din1(grp_fu_845_p1),
    .ce(1'b1),
    .dout(grp_fu_845_p2)
);

myproject_axi_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
myproject_axi_mux_83_32_1_1_U75(
    .din0(tmp_V_23020_reg_214),
    .din1(tmp_V_23118_reg_225),
    .din2(tmp_V_23216_reg_236),
    .din3(tmp_V_23314_reg_247),
    .din4(tmp_V_23412_reg_258),
    .din5(tmp_V_23510_reg_269),
    .din6(tmp_V_2368_reg_280),
    .din7(tmp_V_2376_reg_291),
    .din8(tmp_1_fu_885_p9),
    .dout(tmp_1_fu_885_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln206_fu_1009_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln514_fu_819_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln215_20_fu_712_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln215_20_fu_712_p2))) begin
            ap_enable_reg_pp0_iter14 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln206_fu_1009_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        i_0_i22_reg_180 <= i_reg_1091;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i22_reg_180 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln514_reg_1126 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_index_reg_203 <= select_ln544_reg_1121;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln215_20_fu_712_p2))) begin
        in_index_reg_203 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln514_reg_1126 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ir1_0_i_i_i21_reg_192 <= ir_reg_1116;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln215_20_fu_712_p2))) begin
        ir1_0_i_i_i21_reg_192 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_368)) begin
        if ((icmp_ln237_fu_924_p2 == 1'd1)) begin
            pX_4 <= 32'd0;
        end else if ((icmp_ln237_fu_924_p2 == 1'd0)) begin
            pX_4 <= add_ln250_fu_929_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_377)) begin
        if ((icmp_ln241_fu_964_p2 == 1'd1)) begin
            pY_4 <= 32'd0;
        end else if ((icmp_ln241_fu_964_p2 == 1'd0)) begin
            pY_4 <= add_ln245_fu_969_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln514_reg_1126_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        phi_mul_reg_302 <= add_ln521_fu_869_p2;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln215_20_fu_712_p2))) begin
        phi_mul_reg_302 <= 20'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln237_reg_1168 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        sX_4 <= select_ln252_reg_1172;
    end else if ((~((res_V_V_full_n == 1'b0) & (1'd1 == and_ln215_20_reg_1087)) & (1'b1 == ap_CS_fsm_state33) & (icmp_ln237_fu_924_p2 == 1'd1))) begin
        sX_4 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((res_V_V_full_n == 1'b0) & (1'd1 == and_ln215_20_reg_1087)) & (1'b1 == ap_CS_fsm_state33) & (icmp_ln241_fu_964_p2 == 1'd1) & (icmp_ln237_fu_924_p2 == 1'd1))) begin
        storemerge_i_reg_561 <= 32'd0;
    end else if (((icmp_ln241_reg_1177 == 1'd0) & (1'b1 == ap_CS_fsm_state34) & (icmp_ln237_reg_1168 == 1'd1))) begin
        storemerge_i_reg_561 <= select_ln247_reg_1181;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln514_reg_1126_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_23020_reg_214 <= ap_phi_mux_tmp_V_252_phi_fu_535_p16;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln215_20_fu_712_p2))) begin
        tmp_V_23020_reg_214 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln514_reg_1126_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_23118_reg_225 <= ap_phi_mux_tmp_V_253_phi_fu_504_p16;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln215_20_fu_712_p2))) begin
        tmp_V_23118_reg_225 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln514_reg_1126_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_23216_reg_236 <= ap_phi_mux_tmp_V_254_phi_fu_473_p16;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln215_20_fu_712_p2))) begin
        tmp_V_23216_reg_236 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln514_reg_1126_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_23314_reg_247 <= ap_phi_mux_tmp_V_255_phi_fu_442_p16;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln215_20_fu_712_p2))) begin
        tmp_V_23314_reg_247 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln514_reg_1126_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_23412_reg_258 <= ap_phi_mux_tmp_V_256_phi_fu_411_p16;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln215_20_fu_712_p2))) begin
        tmp_V_23412_reg_258 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln514_reg_1126_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_23510_reg_269 <= ap_phi_mux_tmp_V_257_phi_fu_380_p16;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln215_20_fu_712_p2))) begin
        tmp_V_23510_reg_269 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln514_reg_1126_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_2368_reg_280 <= ap_phi_mux_tmp_V_258_phi_fu_349_p16;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln215_20_fu_712_p2))) begin
        tmp_V_2368_reg_280 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln514_reg_1126_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_2376_reg_291 <= ap_phi_mux_tmp_V_259_phi_fu_318_p16;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln215_20_fu_712_p2))) begin
        tmp_V_2376_reg_291 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln_fu_875_p4 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_252_reg_530 <= acc_0_V_fu_910_p2;
    end else if ((((trunc_ln_fu_875_p4 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)))) begin
        tmp_V_252_reg_530 <= tmp_V_23020_reg_214;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_252_reg_530 <= ap_phi_reg_pp0_iter14_tmp_V_252_reg_530;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln_fu_875_p4 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_253_reg_499 <= acc_0_V_fu_910_p2;
    end else if ((((trunc_ln_fu_875_p4 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)))) begin
        tmp_V_253_reg_499 <= tmp_V_23118_reg_225;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_253_reg_499 <= ap_phi_reg_pp0_iter14_tmp_V_253_reg_499;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln_fu_875_p4 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_254_reg_468 <= acc_0_V_fu_910_p2;
    end else if ((((trunc_ln_fu_875_p4 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)))) begin
        tmp_V_254_reg_468 <= tmp_V_23216_reg_236;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_254_reg_468 <= ap_phi_reg_pp0_iter14_tmp_V_254_reg_468;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln_fu_875_p4 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_255_reg_437 <= acc_0_V_fu_910_p2;
    end else if ((((trunc_ln_fu_875_p4 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)))) begin
        tmp_V_255_reg_437 <= tmp_V_23314_reg_247;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_255_reg_437 <= ap_phi_reg_pp0_iter14_tmp_V_255_reg_437;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln_fu_875_p4 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_256_reg_406 <= acc_0_V_fu_910_p2;
    end else if ((((trunc_ln_fu_875_p4 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)))) begin
        tmp_V_256_reg_406 <= tmp_V_23412_reg_258;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_256_reg_406 <= ap_phi_reg_pp0_iter14_tmp_V_256_reg_406;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln_fu_875_p4 == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_257_reg_375 <= acc_0_V_fu_910_p2;
    end else if ((((trunc_ln_fu_875_p4 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)))) begin
        tmp_V_257_reg_375 <= tmp_V_23510_reg_269;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_257_reg_375 <= ap_phi_reg_pp0_iter14_tmp_V_257_reg_375;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln_fu_875_p4 == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_258_reg_344 <= acc_0_V_fu_910_p2;
    end else if ((((trunc_ln_fu_875_p4 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)))) begin
        tmp_V_258_reg_344 <= tmp_V_2368_reg_280;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_258_reg_344 <= ap_phi_reg_pp0_iter14_tmp_V_258_reg_344;
    end
end

always @ (posedge ap_clk) begin
    if ((((trunc_ln_fu_875_p4 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((trunc_ln_fu_875_p4 == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1)))) begin
        tmp_V_259_reg_313 <= tmp_V_2376_reg_291;
    end else if (((trunc_ln_fu_875_p4 == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_259_reg_313 <= acc_0_V_fu_910_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        tmp_V_259_reg_313 <= ap_phi_reg_pp0_iter14_tmp_V_259_reg_313;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        and_ln215_20_reg_1087 <= and_ln215_20_fu_712_p2;
        i_reg_1091 <= i_fu_718_p2;
        icmp_ln215_28_reg_1070 <= icmp_ln215_28_fu_654_p2;
        icmp_ln215_reg_1060 <= icmp_ln215_fu_644_p2;
        layer_in_V <= call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_fu_578_ap_return;
        pX_4_load_reg_1081 <= pX_4;
        pY_4_load_reg_1075 <= pY_4;
        sX_4_load_reg_1055 <= sX_4;
        sY_4_load_reg_1065 <= sY_4;
    end
end

always @ (posedge ap_clk) begin
    if ((~((res_V_V_full_n == 1'b0) & (1'd1 == and_ln215_20_reg_1087)) & (1'b1 == ap_CS_fsm_state33))) begin
        icmp_ln237_reg_1168 <= icmp_ln237_fu_924_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((res_V_V_full_n == 1'b0) & (1'd1 == and_ln215_20_reg_1087)) & (1'b1 == ap_CS_fsm_state33) & (icmp_ln237_fu_924_p2 == 1'd1))) begin
        icmp_ln241_reg_1177 <= icmp_ln241_fu_964_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln514_reg_1126 <= icmp_ln514_fu_819_p2;
        icmp_ln514_reg_1126_pp0_iter1_reg <= icmp_ln514_reg_1126;
        icmp_ln532_reg_1096 <= icmp_ln532_fu_742_p2;
        select_ln532_20_reg_1101 <= select_ln532_20_fu_774_p3;
        sub_ln532_30_reg_1106[11 : 1] <= sub_ln532_30_fu_782_p2[11 : 1];
        sub_ln532_30_reg_1106_pp0_iter1_reg[11 : 1] <= sub_ln532_30_reg_1106[11 : 1];
        w17_V_load_reg_1140 <= w17_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln514_reg_1126_pp0_iter10_reg <= icmp_ln514_reg_1126_pp0_iter9_reg;
        icmp_ln514_reg_1126_pp0_iter11_reg <= icmp_ln514_reg_1126_pp0_iter10_reg;
        icmp_ln514_reg_1126_pp0_iter12_reg <= icmp_ln514_reg_1126_pp0_iter11_reg;
        icmp_ln514_reg_1126_pp0_iter13_reg <= icmp_ln514_reg_1126_pp0_iter12_reg;
        icmp_ln514_reg_1126_pp0_iter2_reg <= icmp_ln514_reg_1126_pp0_iter1_reg;
        icmp_ln514_reg_1126_pp0_iter3_reg <= icmp_ln514_reg_1126_pp0_iter2_reg;
        icmp_ln514_reg_1126_pp0_iter4_reg <= icmp_ln514_reg_1126_pp0_iter3_reg;
        icmp_ln514_reg_1126_pp0_iter5_reg <= icmp_ln514_reg_1126_pp0_iter4_reg;
        icmp_ln514_reg_1126_pp0_iter6_reg <= icmp_ln514_reg_1126_pp0_iter5_reg;
        icmp_ln514_reg_1126_pp0_iter7_reg <= icmp_ln514_reg_1126_pp0_iter6_reg;
        icmp_ln514_reg_1126_pp0_iter8_reg <= icmp_ln514_reg_1126_pp0_iter7_reg;
        icmp_ln514_reg_1126_pp0_iter9_reg <= icmp_ln514_reg_1126_pp0_iter8_reg;
        lshr_ln532_reg_1145 <= grp_fu_845_p2;
        p_0_reg_1155 <= grp_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_572_ap_return;
        sub_ln532_30_reg_1106_pp0_iter2_reg[11 : 1] <= sub_ln532_30_reg_1106_pp0_iter1_reg[11 : 1];
        sub_ln532_30_reg_1106_pp0_iter3_reg[11 : 1] <= sub_ln532_30_reg_1106_pp0_iter2_reg[11 : 1];
        sub_ln532_30_reg_1106_pp0_iter4_reg[11 : 1] <= sub_ln532_30_reg_1106_pp0_iter3_reg[11 : 1];
        sub_ln532_30_reg_1106_pp0_iter5_reg[11 : 1] <= sub_ln532_30_reg_1106_pp0_iter4_reg[11 : 1];
        sub_ln532_30_reg_1106_pp0_iter6_reg[11 : 1] <= sub_ln532_30_reg_1106_pp0_iter5_reg[11 : 1];
        trunc_ln532_reg_1150 <= trunc_ln532_fu_865_p1;
        w17_V_load_reg_1140_pp0_iter2_reg <= w17_V_load_reg_1140;
        w17_V_load_reg_1140_pp0_iter3_reg <= w17_V_load_reg_1140_pp0_iter2_reg;
        w17_V_load_reg_1140_pp0_iter4_reg <= w17_V_load_reg_1140_pp0_iter3_reg;
        w17_V_load_reg_1140_pp0_iter5_reg <= w17_V_load_reg_1140_pp0_iter4_reg;
        w17_V_load_reg_1140_pp0_iter6_reg <= w17_V_load_reg_1140_pp0_iter5_reg;
        w17_V_load_reg_1140_pp0_iter7_reg <= w17_V_load_reg_1140_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ir_reg_1116 <= ir_fu_793_p2;
        select_ln544_reg_1121 <= select_ln544_fu_811_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln237_reg_1168 == 1'd1))) begin
        sY_4 <= ap_phi_mux_storemerge_i_phi_fu_565_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((~((res_V_V_full_n == 1'b0) & (1'd1 == and_ln215_20_reg_1087)) & (icmp_ln241_fu_964_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33) & (icmp_ln237_fu_924_p2 == 1'd1))) begin
        select_ln247_reg_1181 <= select_ln247_fu_985_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((res_V_V_full_n == 1'b0) & (1'd1 == and_ln215_20_reg_1087)) & (icmp_ln237_fu_924_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        select_ln252_reg_1172 <= select_ln252_fu_945_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_V_245_reg_1020 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_V_246_reg_1025 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_V_247_reg_1030 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_V_248_reg_1035 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_V_249_reg_1040 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_V_250_reg_1045 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        tmp_V_251_reg_1050 <= data_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_reg_1015 <= data_V_V_dout;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln206_fu_1009_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln514_reg_1126 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_in_index_phi_fu_207_p4 = select_ln544_reg_1121;
    end else begin
        ap_phi_mux_in_index_phi_fu_207_p4 = in_index_reg_203;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln514_reg_1126 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_ir1_0_i_i_i21_phi_fu_196_p4 = ir_reg_1116;
    end else begin
        ap_phi_mux_ir1_0_i_i_i21_phi_fu_196_p4 = ir1_0_i_i_i21_reg_192;
    end
end

always @ (*) begin
    if (((icmp_ln241_reg_1177 == 1'd0) & (1'b1 == ap_CS_fsm_state34) & (icmp_ln237_reg_1168 == 1'd1))) begin
        ap_phi_mux_storemerge_i_phi_fu_565_p4 = select_ln247_reg_1181;
    end else begin
        ap_phi_mux_storemerge_i_phi_fu_565_p4 = storemerge_i_reg_561;
    end
end

always @ (*) begin
    if ((trunc_ln_fu_875_p4 == 3'd0)) begin
        ap_phi_mux_tmp_V_252_phi_fu_535_p16 = acc_0_V_fu_910_p2;
    end else if (((trunc_ln_fu_875_p4 == 3'd1) | (trunc_ln_fu_875_p4 == 3'd2) | (trunc_ln_fu_875_p4 == 3'd3) | (trunc_ln_fu_875_p4 == 3'd4) | (trunc_ln_fu_875_p4 == 3'd5) | (trunc_ln_fu_875_p4 == 3'd6) | (trunc_ln_fu_875_p4 == 3'd7))) begin
        ap_phi_mux_tmp_V_252_phi_fu_535_p16 = tmp_V_23020_reg_214;
    end else begin
        ap_phi_mux_tmp_V_252_phi_fu_535_p16 = ap_phi_reg_pp0_iter14_tmp_V_252_reg_530;
    end
end

always @ (*) begin
    if ((trunc_ln_fu_875_p4 == 3'd1)) begin
        ap_phi_mux_tmp_V_253_phi_fu_504_p16 = acc_0_V_fu_910_p2;
    end else if (((trunc_ln_fu_875_p4 == 3'd0) | (trunc_ln_fu_875_p4 == 3'd2) | (trunc_ln_fu_875_p4 == 3'd3) | (trunc_ln_fu_875_p4 == 3'd4) | (trunc_ln_fu_875_p4 == 3'd5) | (trunc_ln_fu_875_p4 == 3'd6) | (trunc_ln_fu_875_p4 == 3'd7))) begin
        ap_phi_mux_tmp_V_253_phi_fu_504_p16 = tmp_V_23118_reg_225;
    end else begin
        ap_phi_mux_tmp_V_253_phi_fu_504_p16 = ap_phi_reg_pp0_iter14_tmp_V_253_reg_499;
    end
end

always @ (*) begin
    if ((trunc_ln_fu_875_p4 == 3'd2)) begin
        ap_phi_mux_tmp_V_254_phi_fu_473_p16 = acc_0_V_fu_910_p2;
    end else if (((trunc_ln_fu_875_p4 == 3'd0) | (trunc_ln_fu_875_p4 == 3'd1) | (trunc_ln_fu_875_p4 == 3'd3) | (trunc_ln_fu_875_p4 == 3'd4) | (trunc_ln_fu_875_p4 == 3'd5) | (trunc_ln_fu_875_p4 == 3'd6) | (trunc_ln_fu_875_p4 == 3'd7))) begin
        ap_phi_mux_tmp_V_254_phi_fu_473_p16 = tmp_V_23216_reg_236;
    end else begin
        ap_phi_mux_tmp_V_254_phi_fu_473_p16 = ap_phi_reg_pp0_iter14_tmp_V_254_reg_468;
    end
end

always @ (*) begin
    if ((trunc_ln_fu_875_p4 == 3'd3)) begin
        ap_phi_mux_tmp_V_255_phi_fu_442_p16 = acc_0_V_fu_910_p2;
    end else if (((trunc_ln_fu_875_p4 == 3'd0) | (trunc_ln_fu_875_p4 == 3'd1) | (trunc_ln_fu_875_p4 == 3'd2) | (trunc_ln_fu_875_p4 == 3'd4) | (trunc_ln_fu_875_p4 == 3'd5) | (trunc_ln_fu_875_p4 == 3'd6) | (trunc_ln_fu_875_p4 == 3'd7))) begin
        ap_phi_mux_tmp_V_255_phi_fu_442_p16 = tmp_V_23314_reg_247;
    end else begin
        ap_phi_mux_tmp_V_255_phi_fu_442_p16 = ap_phi_reg_pp0_iter14_tmp_V_255_reg_437;
    end
end

always @ (*) begin
    if ((trunc_ln_fu_875_p4 == 3'd4)) begin
        ap_phi_mux_tmp_V_256_phi_fu_411_p16 = acc_0_V_fu_910_p2;
    end else if (((trunc_ln_fu_875_p4 == 3'd0) | (trunc_ln_fu_875_p4 == 3'd1) | (trunc_ln_fu_875_p4 == 3'd2) | (trunc_ln_fu_875_p4 == 3'd3) | (trunc_ln_fu_875_p4 == 3'd5) | (trunc_ln_fu_875_p4 == 3'd6) | (trunc_ln_fu_875_p4 == 3'd7))) begin
        ap_phi_mux_tmp_V_256_phi_fu_411_p16 = tmp_V_23412_reg_258;
    end else begin
        ap_phi_mux_tmp_V_256_phi_fu_411_p16 = ap_phi_reg_pp0_iter14_tmp_V_256_reg_406;
    end
end

always @ (*) begin
    if ((trunc_ln_fu_875_p4 == 3'd5)) begin
        ap_phi_mux_tmp_V_257_phi_fu_380_p16 = acc_0_V_fu_910_p2;
    end else if (((trunc_ln_fu_875_p4 == 3'd0) | (trunc_ln_fu_875_p4 == 3'd1) | (trunc_ln_fu_875_p4 == 3'd2) | (trunc_ln_fu_875_p4 == 3'd3) | (trunc_ln_fu_875_p4 == 3'd4) | (trunc_ln_fu_875_p4 == 3'd6) | (trunc_ln_fu_875_p4 == 3'd7))) begin
        ap_phi_mux_tmp_V_257_phi_fu_380_p16 = tmp_V_23510_reg_269;
    end else begin
        ap_phi_mux_tmp_V_257_phi_fu_380_p16 = ap_phi_reg_pp0_iter14_tmp_V_257_reg_375;
    end
end

always @ (*) begin
    if ((trunc_ln_fu_875_p4 == 3'd6)) begin
        ap_phi_mux_tmp_V_258_phi_fu_349_p16 = acc_0_V_fu_910_p2;
    end else if (((trunc_ln_fu_875_p4 == 3'd0) | (trunc_ln_fu_875_p4 == 3'd1) | (trunc_ln_fu_875_p4 == 3'd2) | (trunc_ln_fu_875_p4 == 3'd3) | (trunc_ln_fu_875_p4 == 3'd4) | (trunc_ln_fu_875_p4 == 3'd5) | (trunc_ln_fu_875_p4 == 3'd7))) begin
        ap_phi_mux_tmp_V_258_phi_fu_349_p16 = tmp_V_2368_reg_280;
    end else begin
        ap_phi_mux_tmp_V_258_phi_fu_349_p16 = ap_phi_reg_pp0_iter14_tmp_V_258_reg_344;
    end
end

always @ (*) begin
    if (((trunc_ln_fu_875_p4 == 3'd0) | (trunc_ln_fu_875_p4 == 3'd1) | (trunc_ln_fu_875_p4 == 3'd2) | (trunc_ln_fu_875_p4 == 3'd3) | (trunc_ln_fu_875_p4 == 3'd4) | (trunc_ln_fu_875_p4 == 3'd5) | (trunc_ln_fu_875_p4 == 3'd6))) begin
        ap_phi_mux_tmp_V_259_phi_fu_318_p16 = tmp_V_2376_reg_291;
    end else if ((trunc_ln_fu_875_p4 == 3'd7)) begin
        ap_phi_mux_tmp_V_259_phi_fu_318_p16 = acc_0_V_fu_910_p2;
    end else begin
        ap_phi_mux_tmp_V_259_phi_fu_318_p16 = ap_phi_reg_pp0_iter14_tmp_V_259_reg_313;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_fu_578_ap_start = 1'b1;
    end else begin
        call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_fu_578_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        data_V_V_blk_n = data_V_V_empty_n;
    end else begin
        data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        data_V_V_read = 1'b1;
    end else begin
        data_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln206_fu_1009_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_state33) & (1'd1 == and_ln215_20_reg_1087)))) begin
        res_V_V_blk_n = res_V_V_full_n;
    end else begin
        res_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((res_V_V_full_n == 1'b0) & (1'd1 == and_ln215_20_reg_1087)) & (1'b1 == ap_CS_fsm_state33) & (1'd1 == and_ln215_20_reg_1087))) begin
        res_V_V_din = tmp_V_259_reg_313;
    end else if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        res_V_V_din = tmp_V_258_reg_344;
    end else if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
        res_V_V_din = tmp_V_257_reg_375;
    end else if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
        res_V_V_din = tmp_V_256_reg_406;
    end else if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        res_V_V_din = tmp_V_255_reg_437;
    end else if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
        res_V_V_din = tmp_V_254_reg_468;
    end else if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        res_V_V_din = tmp_V_253_reg_499;
    end else if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
        res_V_V_din = tmp_V_252_reg_530;
    end else begin
        res_V_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((res_V_V_full_n == 1'b0) & (1'd1 == and_ln215_20_reg_1087)) & (1'b1 == ap_CS_fsm_state33) & (1'd1 == and_ln215_20_reg_1087)) | ((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32)) | ((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state31)) | ((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state30)) | ((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state29)) | ((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state28)) | ((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state27)) | ((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state26)))) begin
        res_V_V_write = 1'b1;
    end else begin
        res_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w17_V_ce0 = 1'b1;
    end else begin
        w17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((data_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (1'd1 == and_ln215_20_fu_712_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter13 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter13 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if ((~((res_V_V_full_n == 1'b0) & (1'd1 == and_ln215_20_reg_1087)) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln206_fu_1009_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_fu_910_p2 = ($signed(sext_ln703_fu_907_p1) + $signed(tmp_1_fu_885_p10));

assign add_ln245_fu_969_p2 = (pY_4_load_reg_1075 + 32'd1);

assign add_ln247_fu_980_p2 = (sY_4_load_reg_1065 + 32'd1);

assign add_ln250_fu_929_p2 = (pX_4_load_reg_1081 + 32'd1);

assign add_ln252_fu_940_p2 = (sX_4_load_reg_1055 + 32'd1);

assign add_ln521_fu_869_p2 = (20'd1821 + phi_mul_reg_302);

assign add_ln544_fu_799_p2 = (ap_phi_mux_in_index_phi_fu_207_p4 + 10'd1);

assign and_ln215_19_fu_706_p2 = (icmp_ln215_30_fu_694_p2 & icmp_ln215_29_fu_674_p2);

assign and_ln215_20_fu_712_p2 = (and_ln215_fu_700_p2 & and_ln215_19_fu_706_p2);

assign and_ln215_fu_700_p2 = (icmp_ln215_fu_644_p2 & icmp_ln215_28_fu_654_p2);

assign and_ln532_fu_860_p2 = (lshr_ln532_reg_1145 & lshr_ln532_10_fu_854_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state11_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state33 = ((res_V_V_full_n == 1'b0) & (1'd1 == and_ln215_20_reg_1087));
end

always @ (*) begin
    ap_condition_368 = (~((res_V_V_full_n == 1'b0) & (1'd1 == and_ln215_20_reg_1087)) & (1'b1 == ap_CS_fsm_state33));
end

always @ (*) begin
    ap_condition_377 = (~((res_V_V_full_n == 1'b0) & (1'd1 == and_ln215_20_reg_1087)) & (1'b1 == ap_CS_fsm_state33) & (icmp_ln237_fu_924_p2 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter14_tmp_V_252_reg_530 = 'bx;

assign ap_phi_reg_pp0_iter14_tmp_V_253_reg_499 = 'bx;

assign ap_phi_reg_pp0_iter14_tmp_V_254_reg_468 = 'bx;

assign ap_phi_reg_pp0_iter14_tmp_V_255_reg_437 = 'bx;

assign ap_phi_reg_pp0_iter14_tmp_V_256_reg_406 = 'bx;

assign ap_phi_reg_pp0_iter14_tmp_V_257_reg_375 = 'bx;

assign ap_phi_reg_pp0_iter14_tmp_V_258_reg_344 = 'bx;

assign ap_phi_reg_pp0_iter14_tmp_V_259_reg_313 = 'bx;

assign ap_ready = internal_ap_ready;

assign call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config17_s_fu_578_data_V_read = {{{{{{{{tmp_V_251_reg_1050}, {tmp_V_250_reg_1045}}, {tmp_V_249_reg_1040}}, {tmp_V_248_reg_1035}}, {tmp_V_247_reg_1030}}, {tmp_V_246_reg_1025}}, {tmp_V_245_reg_1020}}, {tmp_V_reg_1015}};

assign empty_238_fu_724_p1 = ap_phi_mux_in_index_phi_fu_207_p4[6:0];

assign empty_239_fu_736_p2 = (tmp_s_fu_728_p3 | 12'd31);

assign grp_fu_845_p0 = ((icmp_ln532_reg_1096[0:0] === 1'b1) ? tmp_32_fu_825_p4 : layer_in_V);

assign grp_fu_845_p1 = select_ln532_20_reg_1101;

assign i_fu_718_p2 = (i_0_i22_reg_180 + 9'd1);

assign icmp_ln206_fu_1009_p2 = ((i_0_i22_reg_180 == 9'd323) ? 1'b1 : 1'b0);

assign icmp_ln215_28_fu_654_p2 = ((sY_4 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln215_29_fu_674_p2 = (($signed(tmp_29_fu_664_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln215_30_fu_694_p2 = (($signed(tmp_31_fu_684_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln215_fu_644_p2 = ((sX_4 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln237_fu_924_p2 = ((pX_4_load_reg_1081 == 32'd17) ? 1'b1 : 1'b0);

assign icmp_ln241_fu_964_p2 = ((pY_4_load_reg_1075 == 32'd17) ? 1'b1 : 1'b0);

assign icmp_ln514_fu_819_p2 = ((ap_phi_mux_ir1_0_i_i_i21_phi_fu_196_p4 == 10'd575) ? 1'b1 : 1'b0);

assign icmp_ln532_fu_742_p2 = ((tmp_s_fu_728_p3 > empty_239_fu_736_p2) ? 1'b1 : 1'b0);

assign icmp_ln544_fu_805_p2 = ((add_ln544_fu_799_p2 < 10'd72) ? 1'b1 : 1'b0);

assign ir_fu_793_p2 = (10'd1 + ap_phi_mux_ir1_0_i_i_i21_phi_fu_196_p4);

assign lshr_ln532_10_fu_854_p2 = 2304'd3742053650892133432367999773538322459225928823527575869347258443714776254479140165467924450143929014376701328043796892084250680644651644268919891406030558009514559848402392186697349032657288467726728117428485865736692545611669179323917560467904459270003565249200768855069969069462910188335948939853235385655600614050799627402904169955617680686939217306230732743306013312855692685442723231659949822010462888578091073832552856131420378840703853686445535243055462767679945780563431553986820134725467051353840270015201262955847832589866641019681571016376279703475133297517542073557917754709550486937454822846451632280550418910946262563991699255138480187856382366661603621981981643212128456085078015 >> zext_ln532_20_fu_851_p1;

assign select_ln247_fu_985_p3 = ((icmp_ln215_28_reg_1070[0:0] === 1'b1) ? 32'd2 : add_ln247_fu_980_p2);

assign select_ln252_fu_945_p3 = ((icmp_ln215_reg_1060[0:0] === 1'b1) ? 32'd2 : add_ln252_fu_940_p2);

assign select_ln532_20_fu_774_p3 = ((icmp_ln532_fu_742_p2[0:0] === 1'b1) ? sub_ln532_28_fu_754_p2 : tmp_s_fu_728_p3);

assign select_ln532_fu_766_p3 = ((icmp_ln532_fu_742_p2[0:0] === 1'b1) ? sub_ln532_fu_748_p2 : sub_ln532_29_fu_760_p2);

assign select_ln544_fu_811_p3 = ((icmp_ln544_fu_805_p2[0:0] === 1'b1) ? add_ln544_fu_799_p2 : 10'd0);

assign sext_ln703_fu_907_p1 = $signed(p_0_reg_1155);

assign start_out = real_start;

assign sub_ln532_28_fu_754_p2 = ($signed(12'd2303) - $signed(tmp_s_fu_728_p3));

assign sub_ln532_29_fu_760_p2 = (empty_239_fu_736_p2 - tmp_s_fu_728_p3);

assign sub_ln532_30_fu_782_p2 = ($signed(12'd2303) - $signed(select_ln532_fu_766_p3));

assign sub_ln532_fu_748_p2 = (tmp_s_fu_728_p3 - empty_239_fu_736_p2);

assign tmp_1_fu_885_p9 = {{phi_mul_reg_302[19:17]}};

assign tmp_29_fu_664_p4 = {{pY_4[31:1]}};

assign tmp_31_fu_684_p4 = {{pX_4[31:1]}};

integer ap_tvar_int_0;

always @ (layer_in_V) begin
    for (ap_tvar_int_0 = 2304 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 2303 - 0) begin
            tmp_32_fu_825_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_32_fu_825_p4[ap_tvar_int_0] = layer_in_V[2303 - ap_tvar_int_0];
        end
    end
end

assign tmp_s_fu_728_p3 = {{empty_238_fu_724_p1}, {5'd0}};

assign trunc_ln532_fu_865_p1 = and_ln532_fu_860_p2[31:0];

assign trunc_ln_fu_875_p4 = {{phi_mul_reg_302[19:17]}};

assign w17_V_address0 = zext_ln532_fu_788_p1;

assign zext_ln532_20_fu_851_p1 = sub_ln532_30_reg_1106_pp0_iter6_reg;

assign zext_ln532_fu_788_p1 = ap_phi_mux_ir1_0_i_i_i21_phi_fu_196_p4;

always @ (posedge ap_clk) begin
    sub_ln532_30_reg_1106[0] <= 1'b0;
    sub_ln532_30_reg_1106_pp0_iter1_reg[0] <= 1'b0;
    sub_ln532_30_reg_1106_pp0_iter2_reg[0] <= 1'b0;
    sub_ln532_30_reg_1106_pp0_iter3_reg[0] <= 1'b0;
    sub_ln532_30_reg_1106_pp0_iter4_reg[0] <= 1'b0;
    sub_ln532_30_reg_1106_pp0_iter5_reg[0] <= 1'b0;
    sub_ln532_30_reg_1106_pp0_iter6_reg[0] <= 1'b0;
end

endmodule //conv_2d_cl_me_ap_fixed_ap_fixed_32_16_5_3_0_config17_s
