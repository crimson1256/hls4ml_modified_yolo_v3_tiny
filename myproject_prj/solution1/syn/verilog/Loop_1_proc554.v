// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_1_proc554 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_r_TLAST,
        in_r_TVALID,
        in_r_TREADY,
        in_local_V_V_din,
        in_local_V_V_full_n,
        in_local_V_V_write,
        in_r_TDATA,
        is_last_0_loc_0_i_out_out_din,
        is_last_0_loc_0_i_out_out_full_n,
        is_last_0_loc_0_i_out_out_write
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [0:0] in_r_TLAST;
input   in_r_TVALID;
output   in_r_TREADY;
output  [31:0] in_local_V_V_din;
input   in_local_V_V_full_n;
output   in_local_V_V_write;
input  [31:0] in_r_TDATA;
output  [0:0] is_last_0_loc_0_i_out_out_din;
input   is_last_0_loc_0_i_out_out_full_n;
output   is_last_0_loc_0_i_out_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_r_TREADY;
reg in_local_V_V_write;
reg is_last_0_loc_0_i_out_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_local_V_V_blk_n;
wire    ap_CS_fsm_state8;
reg    in_r_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln46_fu_136_p2;
reg    is_last_0_loc_0_i_out_out_blk_n;
wire   [15:0] i_fu_142_p2;
reg   [15:0] i_reg_432;
reg    ap_block_state2;
reg   [31:0] in_data_tmp_reg_437;
wire   [0:0] is_last_fu_157_p2;
reg   [0:0] is_last_reg_443;
wire   [62:0] trunc_ln556_fu_167_p1;
reg   [62:0] trunc_ln556_reg_448;
wire    ap_CS_fsm_state4;
reg   [0:0] p_Result_s_reg_453;
reg   [10:0] exp_tmp_V_reg_458;
wire   [51:0] trunc_ln565_fu_189_p1;
reg   [51:0] trunc_ln565_reg_463;
wire   [53:0] man_V_2_fu_213_p3;
reg   [53:0] man_V_2_reg_468;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln571_fu_220_p2;
reg   [0:0] icmp_ln571_reg_473;
wire   [0:0] icmp_ln581_fu_231_p2;
reg   [0:0] icmp_ln581_reg_479;
wire  signed [11:0] sh_amt_fu_249_p3;
reg  signed [11:0] sh_amt_reg_485;
wire   [0:0] icmp_ln582_fu_257_p2;
reg   [0:0] icmp_ln582_reg_491;
wire   [31:0] trunc_ln583_fu_263_p1;
reg   [31:0] trunc_ln583_reg_497;
reg   [6:0] tmp_reg_503;
wire  signed [31:0] sext_ln581_fu_277_p1;
wire    ap_CS_fsm_state6;
wire   [0:0] and_ln585_fu_344_p2;
reg   [0:0] and_ln585_reg_518;
wire   [0:0] and_ln603_fu_367_p2;
reg   [0:0] and_ln603_reg_523;
wire   [0:0] or_ln603_fu_373_p2;
reg   [0:0] or_ln603_reg_528;
wire   [31:0] select_ln603_1_fu_379_p3;
reg   [31:0] select_ln603_1_reg_534;
wire   [53:0] grp_fu_294_p2;
reg   [53:0] ashr_ln586_reg_539;
wire    ap_CS_fsm_state7;
wire   [31:0] grp_fu_318_p2;
reg   [31:0] shl_ln604_reg_544;
wire   [0:0] or_ln603_2_fu_401_p2;
reg   [0:0] or_ln603_2_reg_549;
reg   [0:0] is_last_0_loc_0_i_out_dc_0_reg_110;
reg    ap_block_state1;
reg   [15:0] i_0_i_i_i_reg_122;
wire   [63:0] grp_fu_133_p1;
wire   [63:0] ireg_V_fu_163_p1;
wire   [52:0] tmp_i_fu_196_p3;
wire   [53:0] p_Result_6_fu_203_p1;
wire   [53:0] man_V_1_fu_207_p2;
wire   [11:0] zext_ln461_fu_193_p1;
wire   [11:0] F2_fu_225_p2;
wire   [11:0] add_ln581_fu_237_p2;
wire   [11:0] sub_ln581_fu_243_p2;
wire   [53:0] grp_fu_294_p1;
wire   [31:0] bitcast_ln696_fu_299_p1;
wire   [0:0] tmp_38_fu_302_p3;
wire   [0:0] or_ln582_fu_323_p2;
wire   [0:0] xor_ln582_fu_327_p2;
wire   [0:0] icmp_ln585_fu_280_p2;
wire   [0:0] and_ln581_fu_333_p2;
wire   [0:0] xor_ln585_fu_338_p2;
wire   [0:0] or_ln581_fu_356_p2;
wire   [0:0] icmp_ln603_fu_285_p2;
wire   [0:0] xor_ln581_fu_361_p2;
wire   [0:0] and_ln585_1_fu_350_p2;
wire   [31:0] select_ln588_fu_310_p3;
wire   [0:0] xor_ln571_fu_386_p2;
wire   [0:0] and_ln582_fu_391_p2;
wire   [0:0] or_ln603_1_fu_396_p2;
wire   [31:0] trunc_ln586_fu_406_p1;
wire   [31:0] select_ln603_fu_409_p3;
wire   [31:0] select_ln603_2_fu_415_p3;
reg    grp_fu_133_ce;
wire    ap_CS_fsm_state3;
reg   [7:0] ap_NS_fsm;
wire    regslice_both_in_last_V_U_apdone_blk;
wire   [0:0] in_r_TLAST_int;
wire    in_r_TVALID_int;
reg    in_r_TREADY_int;
wire    regslice_both_in_last_V_U_ack_in;
wire    regslice_both_in_data_U_apdone_blk;
wire   [31:0] in_r_TDATA_int;
wire    regslice_both_in_data_U_vld_out;
wire    regslice_both_in_data_U_ack_in;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
end

myproject_axi_fpext_32ns_64_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
myproject_axi_fpext_32ns_64_3_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_r_TDATA_int),
    .ce(grp_fu_133_ce),
    .dout(grp_fu_133_p1)
);

myproject_axi_ashr_54ns_32ns_54_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 2 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 54 ))
myproject_axi_ashr_54ns_32ns_54_2_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(man_V_2_reg_468),
    .din1(grp_fu_294_p1),
    .ce(1'b1),
    .dout(grp_fu_294_p2)
);

myproject_axi_shl_32ns_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_axi_shl_32ns_32s_32_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln583_reg_497),
    .din1(sext_ln581_fu_277_p1),
    .ce(1'b1),
    .dout(grp_fu_318_p2)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_r_TLAST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_last_V_U_ack_in),
    .data_out(in_r_TLAST_int),
    .vld_out(in_r_TVALID_int),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_last_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_data_U_ack_in),
    .data_out(in_r_TDATA_int),
    .vld_out(regslice_both_in_data_U_vld_out),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_data_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~(((icmp_ln46_fu_136_p2 == 1'd1) & (is_last_0_loc_0_i_out_out_full_n == 1'b0)) | ((icmp_ln46_fu_136_p2 == 1'd0) & (in_r_TVALID_int == 1'b0))) & (icmp_ln46_fu_136_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((in_local_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_0_i_i_i_reg_122 <= i_reg_432;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_i_i_reg_122 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((in_local_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        is_last_0_loc_0_i_out_dc_0_reg_110 <= is_last_reg_443;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        is_last_0_loc_0_i_out_dc_0_reg_110 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        and_ln585_reg_518 <= and_ln585_fu_344_p2;
        and_ln603_reg_523 <= and_ln603_fu_367_p2;
        or_ln603_reg_528 <= or_ln603_fu_373_p2;
        select_ln603_1_reg_534 <= select_ln603_1_fu_379_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ashr_ln586_reg_539 <= grp_fu_294_p2;
        or_ln603_2_reg_549 <= or_ln603_2_fu_401_p2;
        shl_ln604_reg_544 <= grp_fu_318_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        exp_tmp_V_reg_458 <= {{ireg_V_fu_163_p1[62:52]}};
        p_Result_s_reg_453 <= ireg_V_fu_163_p1[32'd63];
        trunc_ln556_reg_448 <= trunc_ln556_fu_167_p1;
        trunc_ln565_reg_463 <= trunc_ln565_fu_189_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln46_fu_136_p2 == 1'd1) & (is_last_0_loc_0_i_out_out_full_n == 1'b0)) | ((icmp_ln46_fu_136_p2 == 1'd0) & (in_r_TVALID_int == 1'b0))) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_432 <= i_fu_142_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        icmp_ln571_reg_473 <= icmp_ln571_fu_220_p2;
        icmp_ln581_reg_479 <= icmp_ln581_fu_231_p2;
        icmp_ln582_reg_491 <= icmp_ln582_fu_257_p2;
        man_V_2_reg_468 <= man_V_2_fu_213_p3;
        sh_amt_reg_485 <= sh_amt_fu_249_p3;
        tmp_reg_503 <= {{sh_amt_fu_249_p3[11:5]}};
        trunc_ln583_reg_497 <= trunc_ln583_fu_263_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln46_fu_136_p2 == 1'd1) & (is_last_0_loc_0_i_out_out_full_n == 1'b0)) | ((icmp_ln46_fu_136_p2 == 1'd0) & (in_r_TVALID_int == 1'b0))) & (icmp_ln46_fu_136_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        in_data_tmp_reg_437 <= in_r_TDATA_int;
        is_last_reg_443 <= is_last_fu_157_p2;
    end
end

always @ (*) begin
    if ((~(((icmp_ln46_fu_136_p2 == 1'd1) & (is_last_0_loc_0_i_out_out_full_n == 1'b0)) | ((icmp_ln46_fu_136_p2 == 1'd0) & (in_r_TVALID_int == 1'b0))) & (icmp_ln46_fu_136_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (~(((icmp_ln46_fu_136_p2 == 1'd1) & (is_last_0_loc_0_i_out_out_full_n == 1'b0)) | ((icmp_ln46_fu_136_p2 == 1'd0) & (in_r_TVALID_int == 1'b0))) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_fu_133_ce = 1'b1;
    end else begin
        grp_fu_133_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_local_V_V_blk_n = in_local_V_V_full_n;
    end else begin
        in_local_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((in_local_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        in_local_V_V_write = 1'b1;
    end else begin
        in_local_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_136_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        in_r_TDATA_blk_n = in_r_TVALID_int;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((in_r_TVALID == 1'b1) & (regslice_both_in_last_V_U_ack_in == 1'b1))) begin
        in_r_TREADY = 1'b1;
    end else begin
        in_r_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln46_fu_136_p2 == 1'd1) & (is_last_0_loc_0_i_out_out_full_n == 1'b0)) | ((icmp_ln46_fu_136_p2 == 1'd0) & (in_r_TVALID_int == 1'b0))) & (icmp_ln46_fu_136_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        in_r_TREADY_int = 1'b1;
    end else begin
        in_r_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln46_fu_136_p2 == 1'd1) & (is_last_0_loc_0_i_out_out_full_n == 1'b0)) | ((icmp_ln46_fu_136_p2 == 1'd0) & (in_r_TVALID_int == 1'b0))) & (icmp_ln46_fu_136_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_136_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        is_last_0_loc_0_i_out_out_blk_n = is_last_0_loc_0_i_out_out_full_n;
    end else begin
        is_last_0_loc_0_i_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((icmp_ln46_fu_136_p2 == 1'd1) & (is_last_0_loc_0_i_out_out_full_n == 1'b0)) | ((icmp_ln46_fu_136_p2 == 1'd0) & (in_r_TVALID_int == 1'b0))) & (icmp_ln46_fu_136_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        is_last_0_loc_0_i_out_out_write = 1'b1;
    end else begin
        is_last_0_loc_0_i_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~(((icmp_ln46_fu_136_p2 == 1'd1) & (is_last_0_loc_0_i_out_out_full_n == 1'b0)) | ((icmp_ln46_fu_136_p2 == 1'd0) & (in_r_TVALID_int == 1'b0))) & (icmp_ln46_fu_136_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~(((icmp_ln46_fu_136_p2 == 1'd1) & (is_last_0_loc_0_i_out_out_full_n == 1'b0)) | ((icmp_ln46_fu_136_p2 == 1'd0) & (in_r_TVALID_int == 1'b0))) & (icmp_ln46_fu_136_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((in_local_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_225_p2 = (12'd1075 - zext_ln461_fu_193_p1);

assign add_ln581_fu_237_p2 = ($signed(12'd4080) + $signed(F2_fu_225_p2));

assign and_ln581_fu_333_p2 = (xor_ln582_fu_327_p2 & icmp_ln581_reg_479);

assign and_ln582_fu_391_p2 = (xor_ln571_fu_386_p2 & icmp_ln582_reg_491);

assign and_ln585_1_fu_350_p2 = (icmp_ln585_fu_280_p2 & and_ln581_fu_333_p2);

assign and_ln585_fu_344_p2 = (xor_ln585_fu_338_p2 & and_ln581_fu_333_p2);

assign and_ln603_fu_367_p2 = (xor_ln581_fu_361_p2 & icmp_ln603_fu_285_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2 = (((icmp_ln46_fu_136_p2 == 1'd1) & (is_last_0_loc_0_i_out_out_full_n == 1'b0)) | ((icmp_ln46_fu_136_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)));
end

assign ap_ready = internal_ap_ready;

assign bitcast_ln696_fu_299_p1 = in_data_tmp_reg_437;

assign grp_fu_294_p1 = $unsigned(sext_ln581_fu_277_p1);

assign i_fu_142_p2 = (i_0_i_i_i_reg_122 + 16'd1);

assign icmp_ln46_fu_136_p2 = ((i_0_i_i_i_reg_122 == 16'd49152) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_220_p2 = ((trunc_ln556_reg_448 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_231_p2 = (($signed(F2_fu_225_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_257_p2 = ((F2_fu_225_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_280_p2 = ((sh_amt_reg_485 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_285_p2 = ((tmp_reg_503 == 7'd0) ? 1'b1 : 1'b0);

assign in_local_V_V_din = ((or_ln603_2_reg_549[0:0] === 1'b1) ? select_ln603_2_fu_415_p3 : 32'd0);

assign ireg_V_fu_163_p1 = grp_fu_133_p1;

assign is_last_0_loc_0_i_out_out_din = is_last_0_loc_0_i_out_dc_0_reg_110;

assign is_last_fu_157_p2 = (is_last_0_loc_0_i_out_dc_0_reg_110 | in_r_TLAST_int);

assign man_V_1_fu_207_p2 = (54'd0 - p_Result_6_fu_203_p1);

assign man_V_2_fu_213_p3 = ((p_Result_s_reg_453[0:0] === 1'b1) ? man_V_1_fu_207_p2 : p_Result_6_fu_203_p1);

assign or_ln581_fu_356_p2 = (or_ln582_fu_323_p2 | icmp_ln581_reg_479);

assign or_ln582_fu_323_p2 = (icmp_ln582_reg_491 | icmp_ln571_reg_473);

assign or_ln603_1_fu_396_p2 = (and_ln585_reg_518 | and_ln582_fu_391_p2);

assign or_ln603_2_fu_401_p2 = (or_ln603_reg_528 | or_ln603_1_fu_396_p2);

assign or_ln603_fu_373_p2 = (and_ln603_fu_367_p2 | and_ln585_1_fu_350_p2);

assign p_Result_6_fu_203_p1 = tmp_i_fu_196_p3;

assign select_ln588_fu_310_p3 = ((tmp_38_fu_302_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln603_1_fu_379_p3 = ((and_ln585_fu_344_p2[0:0] === 1'b1) ? select_ln588_fu_310_p3 : trunc_ln583_reg_497);

assign select_ln603_2_fu_415_p3 = ((or_ln603_reg_528[0:0] === 1'b1) ? select_ln603_fu_409_p3 : select_ln603_1_reg_534);

assign select_ln603_fu_409_p3 = ((and_ln603_reg_523[0:0] === 1'b1) ? shl_ln604_reg_544 : trunc_ln586_fu_406_p1);

assign sext_ln581_fu_277_p1 = sh_amt_reg_485;

assign sh_amt_fu_249_p3 = ((icmp_ln581_fu_231_p2[0:0] === 1'b1) ? add_ln581_fu_237_p2 : sub_ln581_fu_243_p2);

assign start_out = real_start;

assign sub_ln581_fu_243_p2 = (12'd16 - F2_fu_225_p2);

assign tmp_38_fu_302_p3 = bitcast_ln696_fu_299_p1[32'd31];

assign tmp_i_fu_196_p3 = {{1'd1}, {trunc_ln565_reg_463}};

assign trunc_ln556_fu_167_p1 = ireg_V_fu_163_p1[62:0];

assign trunc_ln565_fu_189_p1 = ireg_V_fu_163_p1[51:0];

assign trunc_ln583_fu_263_p1 = man_V_2_fu_213_p3[31:0];

assign trunc_ln586_fu_406_p1 = ashr_ln586_reg_539[31:0];

assign xor_ln571_fu_386_p2 = (icmp_ln571_reg_473 ^ 1'd1);

assign xor_ln581_fu_361_p2 = (or_ln581_fu_356_p2 ^ 1'd1);

assign xor_ln582_fu_327_p2 = (or_ln582_fu_323_p2 ^ 1'd1);

assign xor_ln585_fu_338_p2 = (icmp_ln585_fu_280_p2 ^ 1'd1);

assign zext_ln461_fu_193_p1 = exp_tmp_V_reg_458;

endmodule //Loop_1_proc554
