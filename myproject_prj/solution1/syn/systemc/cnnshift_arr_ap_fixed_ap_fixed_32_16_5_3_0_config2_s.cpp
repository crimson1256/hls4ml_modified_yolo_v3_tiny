// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::ap_ST_fsm_state1 = "1";
const sc_lv<32> cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::ap_const_lv1_1 = "1";
const sc_lv<8> cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::ap_const_lv8_81 = "10000001";
const sc_lv<32> cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::ap_const_lv32_20 = "100000";
const sc_lv<32> cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::ap_const_lv32_3F = "111111";
const sc_lv<32> cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::ap_const_lv32_40 = "1000000";
const sc_lv<32> cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::ap_const_lv32_5F = "1011111";
const sc_lv<32> cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::ap_const_lv32_2A0 = "1010100000";
const sc_lv<32> cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::ap_const_lv32_35F = "1101011111";
const sc_lv<32> cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::ap_const_lv32_180 = "110000000";
const sc_lv<32> cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::ap_const_lv32_23F = "1000111111";
const sc_lv<32> cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::ap_const_lv32_60 = "1100000";
const sc_lv<32> cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::ap_const_lv32_11F = "100011111";
const bool cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::ap_const_boolean_1 = true;

cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    layer_in_row_Array_V_3_0_0_U = new cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_layebkb("layer_in_row_Array_V_3_0_0_U");
    layer_in_row_Array_V_3_0_0_U->clk(ap_clk);
    layer_in_row_Array_V_3_0_0_U->reset(ap_rst);
    layer_in_row_Array_V_3_0_0_U->address0(ap_var_for_const0);
    layer_in_row_Array_V_3_0_0_U->ce0(layer_in_row_Array_V_3_0_0_ce0);
    layer_in_row_Array_V_3_0_0_U->we0(layer_in_row_Array_V_3_0_0_we0);
    layer_in_row_Array_V_3_0_0_U->d0(trunc_ln203_fu_84_p1);
    layer_in_row_Array_V_3_0_0_U->q0(layer_in_row_Array_V_3_0_0_q0);
    layer_in_row_Array_V_3_1_0_U = new cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_layebkb("layer_in_row_Array_V_3_1_0_U");
    layer_in_row_Array_V_3_1_0_U->clk(ap_clk);
    layer_in_row_Array_V_3_1_0_U->reset(ap_rst);
    layer_in_row_Array_V_3_1_0_U->address0(ap_var_for_const0);
    layer_in_row_Array_V_3_1_0_U->ce0(layer_in_row_Array_V_3_1_0_ce0);
    layer_in_row_Array_V_3_1_0_U->we0(layer_in_row_Array_V_3_1_0_we0);
    layer_in_row_Array_V_3_1_0_U->d0(layer_in_row_Array_V_3_0_0_q0);
    layer_in_row_Array_V_3_1_0_U->q0(layer_in_row_Array_V_3_1_0_q0);
    layer_in_row_Array_V_3_0_1_U = new cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_layebkb("layer_in_row_Array_V_3_0_1_U");
    layer_in_row_Array_V_3_0_1_U->clk(ap_clk);
    layer_in_row_Array_V_3_0_1_U->reset(ap_rst);
    layer_in_row_Array_V_3_0_1_U->address0(ap_var_for_const0);
    layer_in_row_Array_V_3_0_1_U->ce0(layer_in_row_Array_V_3_0_1_ce0);
    layer_in_row_Array_V_3_0_1_U->we0(layer_in_row_Array_V_3_0_1_we0);
    layer_in_row_Array_V_3_0_1_U->d0(layer_in_row_Array_V_3_0_1_d0);
    layer_in_row_Array_V_3_0_1_U->q0(layer_in_row_Array_V_3_0_1_q0);
    layer_in_row_Array_V_3_1_1_U = new cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_layebkb("layer_in_row_Array_V_3_1_1_U");
    layer_in_row_Array_V_3_1_1_U->clk(ap_clk);
    layer_in_row_Array_V_3_1_1_U->reset(ap_rst);
    layer_in_row_Array_V_3_1_1_U->address0(ap_var_for_const0);
    layer_in_row_Array_V_3_1_1_U->ce0(layer_in_row_Array_V_3_1_1_ce0);
    layer_in_row_Array_V_3_1_1_U->we0(layer_in_row_Array_V_3_1_1_we0);
    layer_in_row_Array_V_3_1_1_U->d0(layer_in_row_Array_V_3_0_1_q0);
    layer_in_row_Array_V_3_1_1_U->q0(layer_in_row_Array_V_3_1_1_q0);
    layer_in_row_Array_V_3_0_2_U = new cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_layebkb("layer_in_row_Array_V_3_0_2_U");
    layer_in_row_Array_V_3_0_2_U->clk(ap_clk);
    layer_in_row_Array_V_3_0_2_U->reset(ap_rst);
    layer_in_row_Array_V_3_0_2_U->address0(ap_var_for_const0);
    layer_in_row_Array_V_3_0_2_U->ce0(layer_in_row_Array_V_3_0_2_ce0);
    layer_in_row_Array_V_3_0_2_U->we0(layer_in_row_Array_V_3_0_2_we0);
    layer_in_row_Array_V_3_0_2_U->d0(layer_in_row_Array_V_3_0_2_d0);
    layer_in_row_Array_V_3_0_2_U->q0(layer_in_row_Array_V_3_0_2_q0);
    layer_in_row_Array_V_3_1_2_U = new cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_layebkb("layer_in_row_Array_V_3_1_2_U");
    layer_in_row_Array_V_3_1_2_U->clk(ap_clk);
    layer_in_row_Array_V_3_1_2_U->reset(ap_rst);
    layer_in_row_Array_V_3_1_2_U->address0(ap_var_for_const0);
    layer_in_row_Array_V_3_1_2_U->ce0(layer_in_row_Array_V_3_1_2_ce0);
    layer_in_row_Array_V_3_1_2_U->we0(layer_in_row_Array_V_3_1_2_we0);
    layer_in_row_Array_V_3_1_2_U->d0(layer_in_row_Array_V_3_0_2_q0);
    layer_in_row_Array_V_3_1_2_U->q0(layer_in_row_Array_V_3_1_2_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_read );
    sensitive << ( layer_in_row_Array_V_3_0_0_q0 );
    sensitive << ( layer_in_row_Array_V_3_1_0_q0 );
    sensitive << ( layer_in_row_Array_V_3_0_1_q0 );
    sensitive << ( layer_in_row_Array_V_3_1_1_q0 );
    sensitive << ( layer_in_row_Array_V_3_0_2_q0 );
    sensitive << ( layer_in_row_Array_V_3_1_2_q0 );
    sensitive << ( tmp_fu_168_p4 );
    sensitive << ( tmp_s_fu_178_p4 );
    sensitive << ( tmp_4_fu_188_p4 );

    SC_METHOD(thread_layer_in_row_Array_V_3_0_0_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_layer_in_row_Array_V_3_0_0_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_layer_in_row_Array_V_3_0_1_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_layer_in_row_Array_V_3_0_1_d0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_read );

    SC_METHOD(thread_layer_in_row_Array_V_3_0_1_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_layer_in_row_Array_V_3_0_2_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_layer_in_row_Array_V_3_0_2_d0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_read );

    SC_METHOD(thread_layer_in_row_Array_V_3_0_2_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_layer_in_row_Array_V_3_1_0_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_layer_in_row_Array_V_3_1_0_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_layer_in_row_Array_V_3_1_1_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_layer_in_row_Array_V_3_1_1_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_layer_in_row_Array_V_3_1_2_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_layer_in_row_Array_V_3_1_2_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_tmp_4_fu_188_p4);
    sensitive << ( output_V_read );

    SC_METHOD(thread_tmp_fu_168_p4);
    sensitive << ( output_V_read );

    SC_METHOD(thread_tmp_s_fu_178_p4);
    sensitive << ( output_V_read );

    SC_METHOD(thread_trunc_ln203_fu_84_p1);
    sensitive << ( data_V_read );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "1";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_V_read, "(port)data_V_read");
    sc_trace(mVcdFile, output_V_read, "(port)output_V_read");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_0_0_ce0, "layer_in_row_Array_V_3_0_0_ce0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_0_0_we0, "layer_in_row_Array_V_3_0_0_we0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_0_0_q0, "layer_in_row_Array_V_3_0_0_q0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_1_0_ce0, "layer_in_row_Array_V_3_1_0_ce0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_1_0_we0, "layer_in_row_Array_V_3_1_0_we0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_1_0_q0, "layer_in_row_Array_V_3_1_0_q0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_0_1_ce0, "layer_in_row_Array_V_3_0_1_ce0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_0_1_we0, "layer_in_row_Array_V_3_0_1_we0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_0_1_d0, "layer_in_row_Array_V_3_0_1_d0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_0_1_q0, "layer_in_row_Array_V_3_0_1_q0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_1_1_ce0, "layer_in_row_Array_V_3_1_1_ce0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_1_1_we0, "layer_in_row_Array_V_3_1_1_we0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_1_1_q0, "layer_in_row_Array_V_3_1_1_q0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_0_2_ce0, "layer_in_row_Array_V_3_0_2_ce0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_0_2_we0, "layer_in_row_Array_V_3_0_2_we0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_0_2_d0, "layer_in_row_Array_V_3_0_2_d0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_0_2_q0, "layer_in_row_Array_V_3_0_2_q0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_1_2_ce0, "layer_in_row_Array_V_3_1_2_ce0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_1_2_we0, "layer_in_row_Array_V_3_1_2_we0");
    sc_trace(mVcdFile, layer_in_row_Array_V_3_1_2_q0, "layer_in_row_Array_V_3_1_2_q0");
    sc_trace(mVcdFile, trunc_ln203_fu_84_p1, "trunc_ln203_fu_84_p1");
    sc_trace(mVcdFile, tmp_fu_168_p4, "tmp_fu_168_p4");
    sc_trace(mVcdFile, tmp_s_fu_178_p4, "tmp_s_fu_178_p4");
    sc_trace(mVcdFile, tmp_4_fu_188_p4, "tmp_4_fu_188_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::~cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete layer_in_row_Array_V_3_0_0_U;
    delete layer_in_row_Array_V_3_1_0_U;
    delete layer_in_row_Array_V_3_0_1_U;
    delete layer_in_row_Array_V_3_1_1_U;
    delete layer_in_row_Array_V_3_0_2_U;
    delete layer_in_row_Array_V_3_1_2_U;
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv8_81;
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_ap_return() {
    ap_return = esl_concat<672,192>(esl_concat<640,32>(esl_concat<608,32>(esl_concat<576,32>(esl_concat<384,192>(esl_concat<352,32>(esl_concat<320,32>(esl_concat<288,32>(esl_concat<96,192>(data_V_read.read(), tmp_fu_168_p4.read()), layer_in_row_Array_V_3_0_2_q0.read()), layer_in_row_Array_V_3_0_1_q0.read()), layer_in_row_Array_V_3_0_0_q0.read()), tmp_s_fu_178_p4.read()), layer_in_row_Array_V_3_1_2_q0.read()), layer_in_row_Array_V_3_1_1_q0.read()), layer_in_row_Array_V_3_1_0_q0.read()), tmp_4_fu_188_p4.read());
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_layer_in_row_Array_V_3_0_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        layer_in_row_Array_V_3_0_0_ce0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        layer_in_row_Array_V_3_0_0_ce0 = ap_const_logic_0;
    }
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_layer_in_row_Array_V_3_0_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        layer_in_row_Array_V_3_0_0_we0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        layer_in_row_Array_V_3_0_0_we0 = ap_const_logic_0;
    }
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_layer_in_row_Array_V_3_0_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        layer_in_row_Array_V_3_0_1_ce0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        layer_in_row_Array_V_3_0_1_ce0 = ap_const_logic_0;
    }
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_layer_in_row_Array_V_3_0_1_d0() {
    layer_in_row_Array_V_3_0_1_d0 = data_V_read.read().range(63, 32);
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_layer_in_row_Array_V_3_0_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        layer_in_row_Array_V_3_0_1_we0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        layer_in_row_Array_V_3_0_1_we0 = ap_const_logic_0;
    }
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_layer_in_row_Array_V_3_0_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        layer_in_row_Array_V_3_0_2_ce0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        layer_in_row_Array_V_3_0_2_ce0 = ap_const_logic_0;
    }
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_layer_in_row_Array_V_3_0_2_d0() {
    layer_in_row_Array_V_3_0_2_d0 = data_V_read.read().range(95, 64);
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_layer_in_row_Array_V_3_0_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        layer_in_row_Array_V_3_0_2_we0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        layer_in_row_Array_V_3_0_2_we0 = ap_const_logic_0;
    }
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_layer_in_row_Array_V_3_1_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        layer_in_row_Array_V_3_1_0_ce0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        layer_in_row_Array_V_3_1_0_ce0 = ap_const_logic_0;
    }
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_layer_in_row_Array_V_3_1_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        layer_in_row_Array_V_3_1_0_we0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        layer_in_row_Array_V_3_1_0_we0 = ap_const_logic_0;
    }
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_layer_in_row_Array_V_3_1_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        layer_in_row_Array_V_3_1_1_ce0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        layer_in_row_Array_V_3_1_1_ce0 = ap_const_logic_0;
    }
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_layer_in_row_Array_V_3_1_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        layer_in_row_Array_V_3_1_1_we0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        layer_in_row_Array_V_3_1_1_we0 = ap_const_logic_0;
    }
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_layer_in_row_Array_V_3_1_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        layer_in_row_Array_V_3_1_2_ce0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        layer_in_row_Array_V_3_1_2_ce0 = ap_const_logic_0;
    }
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_layer_in_row_Array_V_3_1_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        layer_in_row_Array_V_3_1_2_we0 =  (sc_logic) (ap_const_lv1_1[0]);
    } else {
        layer_in_row_Array_V_3_1_2_we0 = ap_const_logic_0;
    }
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_tmp_4_fu_188_p4() {
    tmp_4_fu_188_p4 = output_V_read.read().range(287, 96);
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_tmp_fu_168_p4() {
    tmp_fu_168_p4 = output_V_read.read().range(863, 672);
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_tmp_s_fu_178_p4() {
    tmp_s_fu_178_p4 = output_V_read.read().range(575, 384);
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_trunc_ln203_fu_84_p1() {
    trunc_ln203_fu_84_p1 = data_V_read.read().range(32-1, 0);
}

void cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state1;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

