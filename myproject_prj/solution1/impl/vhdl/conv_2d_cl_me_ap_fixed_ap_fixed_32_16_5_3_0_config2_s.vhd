-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_2d_cl_me_ap_fixed_ap_fixed_32_16_5_3_0_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_V_V_empty_n : IN STD_LOGIC;
    data_V_V_read : OUT STD_LOGIC;
    res_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_V_full_n : IN STD_LOGIC;
    res_V_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_2d_cl_me_ap_fixed_ap_fixed_32_16_5_3_0_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv10_1F : STD_LOGIC_VECTOR (9 downto 0) := "0000011111";
    constant ap_const_lv32_35F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101011111";
    constant ap_const_lv10_35F : STD_LOGIC_VECTOR (9 downto 0) := "1101011111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_1B : STD_LOGIC_VECTOR (7 downto 0) := "00011011";
    constant ap_const_lv8_D7 : STD_LOGIC_VECTOR (7 downto 0) := "11010111";
    constant ap_const_lv864_lc_2 : STD_LOGIC_VECTOR (863 downto
    constant ap_const_lv16_130 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100110000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_81 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000001";
    constant ap_const_lv15_4203 : STD_LOGIC_VECTOR (14 downto 0) := "100001000000011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal layer_in_V_12 : STD_LOGIC_VECTOR (863 downto
    signal sX_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal w2_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal w2_V_ce0 : STD_LOGIC;
    signal w2_V_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal data_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal res_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal and_ln215_14_reg_1019 : STD_LOGIC_VECTOR (0 downto 0);
    signal ir1_0_i_i_i21_reg_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal in_index_reg_185 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_20620_reg_196 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_20718_reg_207 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_20816_reg_218 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_20914_reg_229 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_21012_reg_240 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_21110_reg_251 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_2128_reg_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_2136_reg_273 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_mul_reg_284 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_214_reg_295 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_213_reg_326 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_212_reg_357 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_211_reg_388 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_210_reg_419 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_209_reg_450 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_208_reg_481 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_207_reg_512 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_reg_972 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_205_reg_977 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_206_reg_982 : STD_LOGIC_VECTOR (31 downto 0);
    signal sX_3_load_reg_987 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln215_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln215_reg_992 : STD_LOGIC_VECTOR (0 downto 0);
    signal sY_3_load_reg_997 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln215_19_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln215_19_reg_1002 : STD_LOGIC_VECTOR (0 downto 0);
    signal pY_3_load_reg_1007 : STD_LOGIC_VECTOR (31 downto 0);
    signal pX_3_load_reg_1013 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln215_14_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_675_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal i_reg_1023 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln532_13_fu_741_p3 : STD_LOGIC_VECTOR (863 downto 0);
    signal select_ln532_13_reg_1028 : STD_LOGIC_VECTOR (863 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state6_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln532_14_fu_749_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln532_14_reg_1033 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln532_21_fu_757_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln532_21_reg_1038 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln532_21_reg_1038_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln532_21_reg_1038_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln532_21_reg_1038_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln532_21_reg_1038_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln532_21_reg_1038_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln532_21_reg_1038_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal ir_fu_768_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ir_reg_1048 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln544_fu_786_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln544_reg_1053 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln514_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1058 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1058_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1058_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1058_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1058_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1058_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1058_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1058_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1058_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1058_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1058_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1058_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1058_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1058_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1058_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal w2_V_load_reg_1067 : STD_LOGIC_VECTOR (14 downto 0);
    signal w2_V_load_reg_1067_pp0_iter2_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal w2_V_load_reg_1067_pp0_iter3_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal w2_V_load_reg_1067_pp0_iter4_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal w2_V_load_reg_1067_pp0_iter5_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal w2_V_load_reg_1067_pp0_iter6_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal w2_V_load_reg_1067_pp0_iter7_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_803_p2 : STD_LOGIC_VECTOR (863 downto 0);
    signal lshr_ln532_reg_1072 : STD_LOGIC_VECTOR (863 downto 0);
    signal trunc_ln532_fu_822_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln532_reg_1077 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_554_ap_return : STD_LOGIC_VECTOR (30 downto 0);
    signal p_0_reg_1082 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln521_fu_826_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln521_reg_1087 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal trunc_ln_fu_832_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln237_fu_881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln237_reg_1096 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state29 : BOOLEAN;
    signal select_ln252_fu_902_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln252_reg_1100 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln241_fu_921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln241_reg_1105 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln247_fu_942_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln247_reg_1109 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560_ap_start : STD_LOGIC;
    signal call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560_ap_done : STD_LOGIC;
    signal call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560_ap_idle : STD_LOGIC;
    signal call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560_ap_ready : STD_LOGIC;
    signal call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560_data_V_read : STD_LOGIC_VECTOR (95 downto 0);
    signal call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560_ap_return : STD_LOGIC_VECTOR (863 downto 0);
    signal i_0_i22_reg_162 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal icmp_ln206_fu_966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_ir1_0_i_i_i21_phi_fu_178_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_in_index_phi_fu_189_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_tmp_V_20620_phi_fu_200_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_V_20718_phi_fu_211_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_V_20816_phi_fu_222_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_V_20914_phi_fu_233_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_V_21012_phi_fu_244_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_V_21110_phi_fu_255_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_V_2128_phi_fu_266_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_V_2136_phi_fu_277_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_mul_phi_fu_288_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_0_V_fu_867_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_tmp_V_214_reg_295 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_tmp_V_213_reg_326 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_tmp_V_212_reg_357 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_tmp_V_211_reg_388 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_tmp_V_210_reg_419 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_tmp_V_209_reg_450 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_tmp_V_208_reg_481 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_tmp_V_207_reg_512 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge_i_phi_fu_547_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge_i_reg_543 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln532_fu_763_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln245_fu_926_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln250_fu_886_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_621_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_21_fu_641_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln215_20_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln215_21_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln215_13_fu_663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln215_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_223_fu_681_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_fu_685_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_224_fu_693_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln532_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln532_fu_715_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln532_20_fu_727_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_22_fu_705_p4 : STD_LOGIC_VECTOR (863 downto 0);
    signal sub_ln532_19_fu_721_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln532_fu_733_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln544_fu_774_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln544_fu_780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_803_p1 : STD_LOGIC_VECTOR (863 downto 0);
    signal zext_ln532_14_fu_808_p1 : STD_LOGIC_VECTOR (863 downto 0);
    signal lshr_ln532_7_fu_811_p2 : STD_LOGIC_VECTOR (863 downto 0);
    signal and_ln532_fu_817_p2 : STD_LOGIC_VECTOR (863 downto 0);
    signal tmp_7_fu_842_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln703_fu_864_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_842_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln252_fu_897_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln247_fu_937_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_326 : BOOLEAN;
    signal ap_condition_335 : BOOLEAN;

    component product_dense_ap_fixed_ap_fixed_ap_fixed_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        a_V : IN STD_LOGIC_VECTOR (31 downto 0);
        w_V : IN STD_LOGIC_VECTOR (14 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_V_read : IN STD_LOGIC_VECTOR (95 downto 0);
        output_V_read : IN STD_LOGIC_VECTOR (863 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (863 downto 0) );
    end component;


    component myproject_axi_lshr_864ns_10ns_864_6_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        OP : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (863 downto 0);
        din1 : IN STD_LOGIC_VECTOR (863 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (863 downto 0) );
    end component;


    component myproject_axi_mux_83_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_2d_cl_me_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_w2_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;



begin
    w2_V_U : component conv_2d_cl_me_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_w2_V
    generic map (
        DataWidth => 15,
        AddressRange => 216,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w2_V_address0,
        ce0 => w2_V_ce0,
        q0 => w2_V_q0);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_554 : component product_dense_ap_fixed_ap_fixed_ap_fixed_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => trunc_ln532_reg_1077,
        w_V => w2_V_load_reg_1067_pp0_iter7_reg,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_554_ap_return);

    call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560 : component cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560_ap_start,
        ap_done => call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560_ap_done,
        ap_idle => call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560_ap_idle,
        ap_ready => call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560_ap_ready,
        data_V_read => call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560_data_V_read,
        output_V_read => layer_in_V_12,
        ap_return => call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560_ap_return);

    myproject_axi_lshr_864ns_10ns_864_6_1_U21 : component myproject_axi_lshr_864ns_10ns_864_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        OP => 1,
        din0_WIDTH => 864,
        din1_WIDTH => 10,
        dout_WIDTH => 864)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln532_13_reg_1028,
        din1 => grp_fu_803_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_803_p2);

    myproject_axi_mux_83_32_1_1_U22 : component myproject_axi_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_phi_mux_tmp_V_20620_phi_fu_200_p4,
        din1 => ap_phi_mux_tmp_V_20718_phi_fu_211_p4,
        din2 => ap_phi_mux_tmp_V_20816_phi_fu_222_p4,
        din3 => ap_phi_mux_tmp_V_20914_phi_fu_233_p4,
        din4 => ap_phi_mux_tmp_V_21012_phi_fu_244_p4,
        din5 => ap_phi_mux_tmp_V_21110_phi_fu_255_p4,
        din6 => ap_phi_mux_tmp_V_2128_phi_fu_266_p4,
        din7 => ap_phi_mux_tmp_V_2136_phi_fu_277_p4,
        din8 => tmp_7_fu_842_p9,
        dout => tmp_7_fu_842_p10);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln206_fu_966_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln514_fu_794_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln215_14_fu_669_p2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln215_14_fu_669_p2))) then 
                    ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_i22_reg_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln206_fu_966_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                i_0_i22_reg_162 <= i_reg_1023;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_i22_reg_162 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    in_index_reg_185_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1058 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_index_reg_185 <= select_ln544_reg_1053;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln215_14_fu_669_p2))) then 
                in_index_reg_185 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    ir1_0_i_i_i21_reg_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1058 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ir1_0_i_i_i21_reg_174 <= ir_reg_1048;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln215_14_fu_669_p2))) then 
                ir1_0_i_i_i21_reg_174 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    pX_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_326)) then
                if ((icmp_ln237_fu_881_p2 = ap_const_lv1_1)) then 
                    pX_3 <= ap_const_lv32_0;
                elsif ((icmp_ln237_fu_881_p2 = ap_const_lv1_0)) then 
                    pX_3 <= add_ln250_fu_886_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_335)) then
                if ((icmp_ln241_fu_921_p2 = ap_const_lv1_1)) then 
                    pY_3 <= ap_const_lv32_0;
                elsif ((icmp_ln241_fu_921_p2 = ap_const_lv1_0)) then 
                    pY_3 <= add_ln245_fu_926_p2;
                end if;
            end if; 
        end if;
    end process;

    phi_mul_reg_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
                phi_mul_reg_284 <= add_ln521_reg_1087;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln215_14_fu_669_p2))) then 
                phi_mul_reg_284 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    sX_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln237_reg_1096 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                sX_3 <= select_ln252_reg_1100;
            elsif ((not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_14_reg_1019))) and (ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln237_fu_881_p2 = ap_const_lv1_1))) then 
                sX_3 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    storemerge_i_reg_543_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_14_reg_1019))) and (ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln241_fu_921_p2 = ap_const_lv1_1) and (icmp_ln237_fu_881_p2 = ap_const_lv1_1))) then 
                storemerge_i_reg_543 <= ap_const_lv32_0;
            elsif (((icmp_ln241_reg_1105 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln237_reg_1096 = ap_const_lv1_1))) then 
                storemerge_i_reg_543 <= select_ln247_reg_1109;
            end if; 
        end if;
    end process;

    tmp_V_20620_reg_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
                tmp_V_20620_reg_196 <= tmp_V_207_reg_512;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln215_14_fu_669_p2))) then 
                tmp_V_20620_reg_196 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_V_20718_reg_207_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
                tmp_V_20718_reg_207 <= tmp_V_208_reg_481;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln215_14_fu_669_p2))) then 
                tmp_V_20718_reg_207 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_V_207_reg_512_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln_fu_832_p4 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_207_reg_512 <= acc_0_V_fu_867_p2;
            elsif ((((trunc_ln_fu_832_p4 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then 
                tmp_V_207_reg_512 <= ap_phi_mux_tmp_V_20620_phi_fu_200_p4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_207_reg_512 <= ap_phi_reg_pp0_iter14_tmp_V_207_reg_512;
            end if; 
        end if;
    end process;

    tmp_V_20816_reg_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
                tmp_V_20816_reg_218 <= tmp_V_209_reg_450;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln215_14_fu_669_p2))) then 
                tmp_V_20816_reg_218 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_V_208_reg_481_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln_fu_832_p4 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_208_reg_481 <= acc_0_V_fu_867_p2;
            elsif ((((trunc_ln_fu_832_p4 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then 
                tmp_V_208_reg_481 <= ap_phi_mux_tmp_V_20718_phi_fu_211_p4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_208_reg_481 <= ap_phi_reg_pp0_iter14_tmp_V_208_reg_481;
            end if; 
        end if;
    end process;

    tmp_V_20914_reg_229_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
                tmp_V_20914_reg_229 <= tmp_V_210_reg_419;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln215_14_fu_669_p2))) then 
                tmp_V_20914_reg_229 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_V_209_reg_450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln_fu_832_p4 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_209_reg_450 <= acc_0_V_fu_867_p2;
            elsif ((((trunc_ln_fu_832_p4 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then 
                tmp_V_209_reg_450 <= ap_phi_mux_tmp_V_20816_phi_fu_222_p4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_209_reg_450 <= ap_phi_reg_pp0_iter14_tmp_V_209_reg_450;
            end if; 
        end if;
    end process;

    tmp_V_21012_reg_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
                tmp_V_21012_reg_240 <= tmp_V_211_reg_388;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln215_14_fu_669_p2))) then 
                tmp_V_21012_reg_240 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_V_210_reg_419_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln_fu_832_p4 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_210_reg_419 <= acc_0_V_fu_867_p2;
            elsif ((((trunc_ln_fu_832_p4 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then 
                tmp_V_210_reg_419 <= ap_phi_mux_tmp_V_20914_phi_fu_233_p4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_210_reg_419 <= ap_phi_reg_pp0_iter14_tmp_V_210_reg_419;
            end if; 
        end if;
    end process;

    tmp_V_21110_reg_251_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
                tmp_V_21110_reg_251 <= tmp_V_212_reg_357;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln215_14_fu_669_p2))) then 
                tmp_V_21110_reg_251 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_V_211_reg_388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln_fu_832_p4 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_211_reg_388 <= acc_0_V_fu_867_p2;
            elsif ((((trunc_ln_fu_832_p4 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then 
                tmp_V_211_reg_388 <= ap_phi_mux_tmp_V_21012_phi_fu_244_p4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_211_reg_388 <= ap_phi_reg_pp0_iter14_tmp_V_211_reg_388;
            end if; 
        end if;
    end process;

    tmp_V_2128_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
                tmp_V_2128_reg_262 <= tmp_V_213_reg_326;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln215_14_fu_669_p2))) then 
                tmp_V_2128_reg_262 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_V_212_reg_357_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln_fu_832_p4 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_212_reg_357 <= acc_0_V_fu_867_p2;
            elsif ((((trunc_ln_fu_832_p4 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then 
                tmp_V_212_reg_357 <= ap_phi_mux_tmp_V_21110_phi_fu_255_p4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_212_reg_357 <= ap_phi_reg_pp0_iter14_tmp_V_212_reg_357;
            end if; 
        end if;
    end process;

    tmp_V_2136_reg_273_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
                tmp_V_2136_reg_273 <= tmp_V_214_reg_295;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln215_14_fu_669_p2))) then 
                tmp_V_2136_reg_273 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_V_213_reg_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln_fu_832_p4 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_213_reg_326 <= acc_0_V_fu_867_p2;
            elsif ((((trunc_ln_fu_832_p4 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then 
                tmp_V_213_reg_326 <= ap_phi_mux_tmp_V_2128_phi_fu_266_p4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_213_reg_326 <= ap_phi_reg_pp0_iter14_tmp_V_213_reg_326;
            end if; 
        end if;
    end process;

    tmp_V_214_reg_295_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((trunc_ln_fu_832_p4 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_832_p4 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then 
                tmp_V_214_reg_295 <= ap_phi_mux_tmp_V_2136_phi_fu_277_p4;
            elsif (((trunc_ln_fu_832_p4 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_214_reg_295 <= acc_0_V_fu_867_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_214_reg_295 <= ap_phi_reg_pp0_iter14_tmp_V_214_reg_295;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then
                add_ln521_reg_1087 <= add_ln521_fu_826_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                and_ln215_14_reg_1019 <= and_ln215_14_fu_669_p2;
                i_reg_1023 <= i_fu_675_p2;
                icmp_ln215_19_reg_1002 <= icmp_ln215_19_fu_611_p2;
                icmp_ln215_reg_992 <= icmp_ln215_fu_601_p2;
                layer_in_V_12 <= call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560_ap_return;
                pX_3_load_reg_1013 <= pX_3;
                pY_3_load_reg_1007 <= pY_3;
                sX_3_load_reg_987 <= sX_3;
                sY_3_load_reg_997 <= sY_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_14_reg_1019))) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                icmp_ln237_reg_1096 <= icmp_ln237_fu_881_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_14_reg_1019))) and (ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln237_fu_881_p2 = ap_const_lv1_1))) then
                icmp_ln241_reg_1105 <= icmp_ln241_fu_921_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln514_reg_1058 <= icmp_ln514_fu_794_p2;
                icmp_ln514_reg_1058_pp0_iter1_reg <= icmp_ln514_reg_1058;
                select_ln532_13_reg_1028 <= select_ln532_13_fu_741_p3;
                select_ln532_14_reg_1033 <= select_ln532_14_fu_749_p3;
                    sub_ln532_21_reg_1038(9 downto 1) <= sub_ln532_21_fu_757_p2(9 downto 1);
                    sub_ln532_21_reg_1038_pp0_iter1_reg(9 downto 1) <= sub_ln532_21_reg_1038(9 downto 1);
                w2_V_load_reg_1067 <= w2_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln514_reg_1058_pp0_iter10_reg <= icmp_ln514_reg_1058_pp0_iter9_reg;
                icmp_ln514_reg_1058_pp0_iter11_reg <= icmp_ln514_reg_1058_pp0_iter10_reg;
                icmp_ln514_reg_1058_pp0_iter12_reg <= icmp_ln514_reg_1058_pp0_iter11_reg;
                icmp_ln514_reg_1058_pp0_iter13_reg <= icmp_ln514_reg_1058_pp0_iter12_reg;
                icmp_ln514_reg_1058_pp0_iter14_reg <= icmp_ln514_reg_1058_pp0_iter13_reg;
                icmp_ln514_reg_1058_pp0_iter2_reg <= icmp_ln514_reg_1058_pp0_iter1_reg;
                icmp_ln514_reg_1058_pp0_iter3_reg <= icmp_ln514_reg_1058_pp0_iter2_reg;
                icmp_ln514_reg_1058_pp0_iter4_reg <= icmp_ln514_reg_1058_pp0_iter3_reg;
                icmp_ln514_reg_1058_pp0_iter5_reg <= icmp_ln514_reg_1058_pp0_iter4_reg;
                icmp_ln514_reg_1058_pp0_iter6_reg <= icmp_ln514_reg_1058_pp0_iter5_reg;
                icmp_ln514_reg_1058_pp0_iter7_reg <= icmp_ln514_reg_1058_pp0_iter6_reg;
                icmp_ln514_reg_1058_pp0_iter8_reg <= icmp_ln514_reg_1058_pp0_iter7_reg;
                icmp_ln514_reg_1058_pp0_iter9_reg <= icmp_ln514_reg_1058_pp0_iter8_reg;
                lshr_ln532_reg_1072 <= grp_fu_803_p2;
                p_0_reg_1082 <= grp_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_554_ap_return;
                    sub_ln532_21_reg_1038_pp0_iter2_reg(9 downto 1) <= sub_ln532_21_reg_1038_pp0_iter1_reg(9 downto 1);
                    sub_ln532_21_reg_1038_pp0_iter3_reg(9 downto 1) <= sub_ln532_21_reg_1038_pp0_iter2_reg(9 downto 1);
                    sub_ln532_21_reg_1038_pp0_iter4_reg(9 downto 1) <= sub_ln532_21_reg_1038_pp0_iter3_reg(9 downto 1);
                    sub_ln532_21_reg_1038_pp0_iter5_reg(9 downto 1) <= sub_ln532_21_reg_1038_pp0_iter4_reg(9 downto 1);
                    sub_ln532_21_reg_1038_pp0_iter6_reg(9 downto 1) <= sub_ln532_21_reg_1038_pp0_iter5_reg(9 downto 1);
                trunc_ln532_reg_1077 <= trunc_ln532_fu_822_p1;
                w2_V_load_reg_1067_pp0_iter2_reg <= w2_V_load_reg_1067;
                w2_V_load_reg_1067_pp0_iter3_reg <= w2_V_load_reg_1067_pp0_iter2_reg;
                w2_V_load_reg_1067_pp0_iter4_reg <= w2_V_load_reg_1067_pp0_iter3_reg;
                w2_V_load_reg_1067_pp0_iter5_reg <= w2_V_load_reg_1067_pp0_iter4_reg;
                w2_V_load_reg_1067_pp0_iter6_reg <= w2_V_load_reg_1067_pp0_iter5_reg;
                w2_V_load_reg_1067_pp0_iter7_reg <= w2_V_load_reg_1067_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ir_reg_1048 <= ir_fu_768_p2;
                select_ln544_reg_1053 <= select_ln544_fu_786_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln237_reg_1096 = ap_const_lv1_1))) then
                sY_3 <= ap_phi_mux_storemerge_i_phi_fu_547_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_14_reg_1019))) and (icmp_ln241_fu_921_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln237_fu_881_p2 = ap_const_lv1_1))) then
                select_ln247_reg_1109 <= select_ln247_fu_942_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_14_reg_1019))) and (icmp_ln237_fu_881_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                select_ln252_reg_1100 <= select_ln252_fu_902_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_V_205_reg_977 <= data_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_V_206_reg_982 <= data_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_V_reg_972 <= data_V_V_dout;
            end if;
        end if;
    end process;
    sub_ln532_21_reg_1038(0) <= '0';
    sub_ln532_21_reg_1038_pp0_iter1_reg(0) <= '0';
    sub_ln532_21_reg_1038_pp0_iter2_reg(0) <= '0';
    sub_ln532_21_reg_1038_pp0_iter3_reg(0) <= '0';
    sub_ln532_21_reg_1038_pp0_iter4_reg(0) <= '0';
    sub_ln532_21_reg_1038_pp0_iter5_reg(0) <= '0';
    sub_ln532_21_reg_1038_pp0_iter6_reg(0) <= '0';

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, data_V_V_empty_n, res_V_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, and_ln215_14_reg_1019, ap_CS_fsm_state5, and_ln215_14_fu_669_p2, ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter15, ap_CS_fsm_state30, icmp_ln206_fu_966_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln215_14_fu_669_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state22 => 
                if (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                if (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                if (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                if (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if ((not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_14_reg_1019))) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln206_fu_966_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    acc_0_V_fu_867_p2 <= std_logic_vector(signed(sext_ln703_fu_864_p1) + signed(tmp_7_fu_842_p10));
    add_ln245_fu_926_p2 <= std_logic_vector(unsigned(pY_3_load_reg_1007) + unsigned(ap_const_lv32_1));
    add_ln247_fu_937_p2 <= std_logic_vector(unsigned(sY_3_load_reg_997) + unsigned(ap_const_lv32_1));
    add_ln250_fu_886_p2 <= std_logic_vector(unsigned(pX_3_load_reg_1013) + unsigned(ap_const_lv32_1));
    add_ln252_fu_897_p2 <= std_logic_vector(unsigned(sX_3_load_reg_987) + unsigned(ap_const_lv32_1));
    add_ln521_fu_826_p2 <= std_logic_vector(unsigned(ap_const_lv16_130) + unsigned(ap_phi_mux_phi_mul_phi_fu_288_p4));
    add_ln544_fu_774_p2 <= std_logic_vector(unsigned(ap_phi_mux_in_index_phi_fu_189_p4) + unsigned(ap_const_lv8_1));
    and_ln215_13_fu_663_p2 <= (icmp_ln215_21_fu_651_p2 and icmp_ln215_20_fu_631_p2);
    and_ln215_14_fu_669_p2 <= (and_ln215_fu_657_p2 and and_ln215_13_fu_663_p2);
    and_ln215_fu_657_p2 <= (icmp_ln215_fu_601_p2 and icmp_ln215_19_fu_611_p2);
    and_ln532_fu_817_p2 <= (lshr_ln532_reg_1072 and lshr_ln532_7_fu_811_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(6);
    ap_CS_fsm_state23 <= ap_CS_fsm(7);
    ap_CS_fsm_state24 <= ap_CS_fsm(8);
    ap_CS_fsm_state25 <= ap_CS_fsm(9);
    ap_CS_fsm_state26 <= ap_CS_fsm(10);
    ap_CS_fsm_state27 <= ap_CS_fsm(11);
    ap_CS_fsm_state28 <= ap_CS_fsm(12);
    ap_CS_fsm_state29 <= ap_CS_fsm(13);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(14);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state29_assign_proc : process(res_V_V_full_n, and_ln215_14_reg_1019)
    begin
                ap_block_state29 <= ((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_14_reg_1019));
    end process;

        ap_block_state6_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_326_assign_proc : process(res_V_V_full_n, ap_CS_fsm_state29, and_ln215_14_reg_1019)
    begin
                ap_condition_326 <= (not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_14_reg_1019))) and (ap_const_logic_1 = ap_CS_fsm_state29));
    end process;


    ap_condition_335_assign_proc : process(res_V_V_full_n, ap_CS_fsm_state29, and_ln215_14_reg_1019, icmp_ln237_fu_881_p2)
    begin
                ap_condition_335 <= (not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_14_reg_1019))) and (ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln237_fu_881_p2 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state30, icmp_ln206_fu_966_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln206_fu_966_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter15)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_in_index_phi_fu_189_p4_assign_proc : process(in_index_reg_185, ap_CS_fsm_pp0_stage0, select_ln544_reg_1053, icmp_ln514_reg_1058, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln514_reg_1058 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_in_index_phi_fu_189_p4 <= select_ln544_reg_1053;
        else 
            ap_phi_mux_in_index_phi_fu_189_p4 <= in_index_reg_185;
        end if; 
    end process;


    ap_phi_mux_ir1_0_i_i_i21_phi_fu_178_p4_assign_proc : process(ir1_0_i_i_i21_reg_174, ap_CS_fsm_pp0_stage0, ir_reg_1048, icmp_ln514_reg_1058, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln514_reg_1058 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_ir1_0_i_i_i21_phi_fu_178_p4 <= ir_reg_1048;
        else 
            ap_phi_mux_ir1_0_i_i_i21_phi_fu_178_p4 <= ir1_0_i_i_i21_reg_174;
        end if; 
    end process;


    ap_phi_mux_phi_mul_phi_fu_288_p4_assign_proc : process(phi_mul_reg_284, icmp_ln514_reg_1058_pp0_iter14_reg, add_ln521_reg_1087, ap_enable_reg_pp0_iter15, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            ap_phi_mux_phi_mul_phi_fu_288_p4 <= add_ln521_reg_1087;
        else 
            ap_phi_mux_phi_mul_phi_fu_288_p4 <= phi_mul_reg_284;
        end if; 
    end process;


    ap_phi_mux_storemerge_i_phi_fu_547_p4_assign_proc : process(icmp_ln237_reg_1096, icmp_ln241_reg_1105, select_ln247_reg_1109, ap_CS_fsm_state30, storemerge_i_reg_543)
    begin
        if (((icmp_ln241_reg_1105 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln237_reg_1096 = ap_const_lv1_1))) then 
            ap_phi_mux_storemerge_i_phi_fu_547_p4 <= select_ln247_reg_1109;
        else 
            ap_phi_mux_storemerge_i_phi_fu_547_p4 <= storemerge_i_reg_543;
        end if; 
    end process;


    ap_phi_mux_tmp_V_20620_phi_fu_200_p4_assign_proc : process(tmp_V_20620_reg_196, tmp_V_207_reg_512, icmp_ln514_reg_1058_pp0_iter14_reg, ap_enable_reg_pp0_iter15, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            ap_phi_mux_tmp_V_20620_phi_fu_200_p4 <= tmp_V_207_reg_512;
        else 
            ap_phi_mux_tmp_V_20620_phi_fu_200_p4 <= tmp_V_20620_reg_196;
        end if; 
    end process;


    ap_phi_mux_tmp_V_20718_phi_fu_211_p4_assign_proc : process(tmp_V_20718_reg_207, tmp_V_208_reg_481, icmp_ln514_reg_1058_pp0_iter14_reg, ap_enable_reg_pp0_iter15, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            ap_phi_mux_tmp_V_20718_phi_fu_211_p4 <= tmp_V_208_reg_481;
        else 
            ap_phi_mux_tmp_V_20718_phi_fu_211_p4 <= tmp_V_20718_reg_207;
        end if; 
    end process;


    ap_phi_mux_tmp_V_20816_phi_fu_222_p4_assign_proc : process(tmp_V_20816_reg_218, tmp_V_209_reg_450, icmp_ln514_reg_1058_pp0_iter14_reg, ap_enable_reg_pp0_iter15, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            ap_phi_mux_tmp_V_20816_phi_fu_222_p4 <= tmp_V_209_reg_450;
        else 
            ap_phi_mux_tmp_V_20816_phi_fu_222_p4 <= tmp_V_20816_reg_218;
        end if; 
    end process;


    ap_phi_mux_tmp_V_20914_phi_fu_233_p4_assign_proc : process(tmp_V_20914_reg_229, tmp_V_210_reg_419, icmp_ln514_reg_1058_pp0_iter14_reg, ap_enable_reg_pp0_iter15, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            ap_phi_mux_tmp_V_20914_phi_fu_233_p4 <= tmp_V_210_reg_419;
        else 
            ap_phi_mux_tmp_V_20914_phi_fu_233_p4 <= tmp_V_20914_reg_229;
        end if; 
    end process;


    ap_phi_mux_tmp_V_21012_phi_fu_244_p4_assign_proc : process(tmp_V_21012_reg_240, tmp_V_211_reg_388, icmp_ln514_reg_1058_pp0_iter14_reg, ap_enable_reg_pp0_iter15, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            ap_phi_mux_tmp_V_21012_phi_fu_244_p4 <= tmp_V_211_reg_388;
        else 
            ap_phi_mux_tmp_V_21012_phi_fu_244_p4 <= tmp_V_21012_reg_240;
        end if; 
    end process;


    ap_phi_mux_tmp_V_21110_phi_fu_255_p4_assign_proc : process(tmp_V_21110_reg_251, tmp_V_212_reg_357, icmp_ln514_reg_1058_pp0_iter14_reg, ap_enable_reg_pp0_iter15, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            ap_phi_mux_tmp_V_21110_phi_fu_255_p4 <= tmp_V_212_reg_357;
        else 
            ap_phi_mux_tmp_V_21110_phi_fu_255_p4 <= tmp_V_21110_reg_251;
        end if; 
    end process;


    ap_phi_mux_tmp_V_2128_phi_fu_266_p4_assign_proc : process(tmp_V_2128_reg_262, tmp_V_213_reg_326, icmp_ln514_reg_1058_pp0_iter14_reg, ap_enable_reg_pp0_iter15, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            ap_phi_mux_tmp_V_2128_phi_fu_266_p4 <= tmp_V_213_reg_326;
        else 
            ap_phi_mux_tmp_V_2128_phi_fu_266_p4 <= tmp_V_2128_reg_262;
        end if; 
    end process;


    ap_phi_mux_tmp_V_2136_phi_fu_277_p4_assign_proc : process(tmp_V_2136_reg_273, tmp_V_214_reg_295, icmp_ln514_reg_1058_pp0_iter14_reg, ap_enable_reg_pp0_iter15, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln514_reg_1058_pp0_iter14_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            ap_phi_mux_tmp_V_2136_phi_fu_277_p4 <= tmp_V_214_reg_295;
        else 
            ap_phi_mux_tmp_V_2136_phi_fu_277_p4 <= tmp_V_2136_reg_273;
        end if; 
    end process;

    ap_phi_reg_pp0_iter14_tmp_V_207_reg_512 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter14_tmp_V_208_reg_481 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter14_tmp_V_209_reg_450 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter14_tmp_V_210_reg_419 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter14_tmp_V_211_reg_388 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter14_tmp_V_212_reg_357 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter14_tmp_V_213_reg_326 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter14_tmp_V_214_reg_295 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560_ap_start_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560_ap_start <= ap_const_logic_1;
        else 
            call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config2_s_fu_560_data_V_read <= ((tmp_V_206_reg_982 & tmp_V_205_reg_977) & tmp_V_reg_972);

    data_V_V_blk_n_assign_proc : process(data_V_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_V_V_blk_n <= data_V_V_empty_n;
        else 
            data_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_V_read_assign_proc : process(data_V_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if ((((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            data_V_V_read <= ap_const_logic_1;
        else 
            data_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    empty_223_fu_681_p1 <= ap_phi_mux_in_index_phi_fu_189_p4(5 - 1 downto 0);
    empty_224_fu_693_p2 <= (tmp_s_fu_685_p3 or ap_const_lv10_1F);
    grp_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln532_14_reg_1033),864));
    i_fu_675_p2 <= std_logic_vector(unsigned(i_0_i22_reg_162) + unsigned(ap_const_lv15_1));
    icmp_ln206_fu_966_p2 <= "1" when (i_0_i22_reg_162 = ap_const_lv15_4203) else "0";
    icmp_ln215_19_fu_611_p2 <= "1" when (sY_3 = ap_const_lv32_2) else "0";
    icmp_ln215_20_fu_631_p2 <= "1" when (signed(tmp_20_fu_621_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln215_21_fu_651_p2 <= "1" when (signed(tmp_21_fu_641_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln215_fu_601_p2 <= "1" when (sX_3 = ap_const_lv32_2) else "0";
    icmp_ln237_fu_881_p2 <= "1" when (pX_3_load_reg_1013 = ap_const_lv32_81) else "0";
    icmp_ln241_fu_921_p2 <= "1" when (pY_3_load_reg_1007 = ap_const_lv32_81) else "0";
    icmp_ln514_fu_794_p2 <= "1" when (ap_phi_mux_ir1_0_i_i_i21_phi_fu_178_p4 = ap_const_lv8_D7) else "0";
    icmp_ln532_fu_699_p2 <= "1" when (unsigned(tmp_s_fu_685_p3) > unsigned(empty_224_fu_693_p2)) else "0";
    icmp_ln544_fu_780_p2 <= "1" when (unsigned(add_ln544_fu_774_p2) < unsigned(ap_const_lv8_1B)) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state30, icmp_ln206_fu_966_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln206_fu_966_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ir_fu_768_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(ap_phi_mux_ir1_0_i_i_i21_phi_fu_178_p4));
    lshr_ln532_7_fu_811_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv864_lc_2),to_integer(unsigned('0' & zext_ln532_14_fu_808_p1(31-1 downto 0)))));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_V_blk_n_assign_proc : process(res_V_V_full_n, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, and_ln215_14_reg_1019)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_lv1_1 = and_ln215_14_reg_1019)))) then 
            res_V_V_blk_n <= res_V_V_full_n;
        else 
            res_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_V_din_assign_proc : process(res_V_V_full_n, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, and_ln215_14_reg_1019, tmp_V_214_reg_295, tmp_V_213_reg_326, tmp_V_212_reg_357, tmp_V_211_reg_388, tmp_V_210_reg_419, tmp_V_209_reg_450, tmp_V_208_reg_481, tmp_V_207_reg_512)
    begin
        if ((not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_14_reg_1019))) and (ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_lv1_1 = and_ln215_14_reg_1019))) then 
            res_V_V_din <= tmp_V_214_reg_295;
        elsif (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            res_V_V_din <= tmp_V_213_reg_326;
        elsif (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            res_V_V_din <= tmp_V_212_reg_357;
        elsif (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            res_V_V_din <= tmp_V_211_reg_388;
        elsif (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            res_V_V_din <= tmp_V_210_reg_419;
        elsif (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            res_V_V_din <= tmp_V_209_reg_450;
        elsif (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            res_V_V_din <= tmp_V_208_reg_481;
        elsif (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            res_V_V_din <= tmp_V_207_reg_512;
        else 
            res_V_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    res_V_V_write_assign_proc : process(res_V_V_full_n, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, and_ln215_14_reg_1019)
    begin
        if ((((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or (not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_14_reg_1019))) and (ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_lv1_1 = and_ln215_14_reg_1019)) or ((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23)))) then 
            res_V_V_write <= ap_const_logic_1;
        else 
            res_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln247_fu_942_p3 <= 
        ap_const_lv32_2 when (icmp_ln215_19_reg_1002(0) = '1') else 
        add_ln247_fu_937_p2;
    select_ln252_fu_902_p3 <= 
        ap_const_lv32_2 when (icmp_ln215_reg_992(0) = '1') else 
        add_ln252_fu_897_p2;
    select_ln532_13_fu_741_p3 <= 
        tmp_22_fu_705_p4 when (icmp_ln532_fu_699_p2(0) = '1') else 
        layer_in_V_12;
    select_ln532_14_fu_749_p3 <= 
        sub_ln532_19_fu_721_p2 when (icmp_ln532_fu_699_p2(0) = '1') else 
        tmp_s_fu_685_p3;
    select_ln532_fu_733_p3 <= 
        sub_ln532_fu_715_p2 when (icmp_ln532_fu_699_p2(0) = '1') else 
        sub_ln532_20_fu_727_p2;
    select_ln544_fu_786_p3 <= 
        add_ln544_fu_774_p2 when (icmp_ln544_fu_780_p2(0) = '1') else 
        ap_const_lv8_0;
        sext_ln703_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_0_reg_1082),32));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln532_19_fu_721_p2 <= std_logic_vector(signed(ap_const_lv10_35F) - signed(tmp_s_fu_685_p3));
    sub_ln532_20_fu_727_p2 <= std_logic_vector(unsigned(empty_224_fu_693_p2) - unsigned(tmp_s_fu_685_p3));
    sub_ln532_21_fu_757_p2 <= std_logic_vector(signed(ap_const_lv10_35F) - signed(select_ln532_fu_733_p3));
    sub_ln532_fu_715_p2 <= std_logic_vector(unsigned(tmp_s_fu_685_p3) - unsigned(empty_224_fu_693_p2));
    tmp_20_fu_621_p4 <= pY_3(31 downto 1);
    tmp_21_fu_641_p4 <= pX_3(31 downto 1);
    
    tmp_22_fu_705_p4_proc : process(layer_in_V_12)
    variable vlo_cpy : STD_LOGIC_VECTOR(864+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(864+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(864 - 1 downto 0);
    variable tmp_22_fu_705_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(864 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(864 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(864 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(10 - 1 downto 0) := ap_const_lv32_35F(10 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(10 - 1 downto 0) := ap_const_lv32_0(10 - 1 downto 0);
        v0_cpy := layer_in_V_12;
        if (vlo_cpy(10 - 1 downto 0) > vhi_cpy(10 - 1 downto 0)) then
            vhi_cpy(10-1 downto 0) := std_logic_vector(864-1-unsigned(ap_const_lv32_0(10-1 downto 0)));
            vlo_cpy(10-1 downto 0) := std_logic_vector(864-1-unsigned(ap_const_lv32_35F(10-1 downto 0)));
            for tmp_22_fu_705_p4_i in 0 to 864-1 loop
                v0_cpy(tmp_22_fu_705_p4_i) := layer_in_V_12(864-1-tmp_22_fu_705_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(10-1 downto 0)))));

        section := (others=>'0');
        section(10-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(10-1 downto 0)) - unsigned(vlo_cpy(10-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(864-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_22_fu_705_p4 <= resvalue(864-1 downto 0);
    end process;

    tmp_7_fu_842_p9 <= ap_phi_mux_phi_mul_phi_fu_288_p4(15 downto 13);
    tmp_s_fu_685_p3 <= (empty_223_fu_681_p1 & ap_const_lv5_0);
    trunc_ln532_fu_822_p1 <= and_ln532_fu_817_p2(32 - 1 downto 0);
    trunc_ln_fu_832_p4 <= ap_phi_mux_phi_mul_phi_fu_288_p4(15 downto 13);
    w2_V_address0 <= zext_ln532_fu_763_p1(8 - 1 downto 0);

    w2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w2_V_ce0 <= ap_const_logic_1;
        else 
            w2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln532_14_fu_808_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln532_21_reg_1038_pp0_iter6_reg),864));
    zext_ln532_fu_763_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_ir1_0_i_i_i21_phi_fu_178_p4),64));
end behav;
