-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_2d_cl_me_ap_fixed_ap_fixed_32_16_5_3_0_config31_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    data_V_V_empty_n : IN STD_LOGIC;
    data_V_V_read : OUT STD_LOGIC;
    res_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    res_V_V_full_n : IN STD_LOGIC;
    res_V_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_2d_cl_me_ap_fixed_ap_fixed_32_16_5_3_0_config31_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv12_1F : STD_LOGIC_VECTOR (11 downto 0) := "000000011111";
    constant ap_const_lv12_8FF : STD_LOGIC_VECTOR (11 downto 0) := "100011111111";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_48 : STD_LOGIC_VECTOR (9 downto 0) := "0001001000";
    constant ap_const_lv10_23F : STD_LOGIC_VECTOR (9 downto 0) := "1000111111";
    constant ap_const_lv32_8FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100011111111";
    constant ap_const_lv2304_lc_3 : STD_LOGIC_VECTOR (2303 downto
    constant ap_const_lv20_71D : STD_LOGIC_VECTOR (19 downto 0) := "00000000011100011101";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal layer_in_V_11 : STD_LOGIC_VECTOR (2303 downto
    signal sX_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal w31_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal w31_V_ce0 : STD_LOGIC;
    signal w31_V_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal data_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal res_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal and_ln215_12_reg_1089 : STD_LOGIC_VECTOR (0 downto 0);
    signal ir1_0_i_i_i21_reg_194 : STD_LOGIC_VECTOR (9 downto 0);
    signal in_index_reg_205 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_V_19820_reg_216 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_19918_reg_227 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_20016_reg_238 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_20114_reg_249 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_20212_reg_260 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_20310_reg_271 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_2048_reg_282 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_2056_reg_293 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_mul_reg_304 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_V_204_reg_315 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_203_reg_346 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_202_reg_377 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_201_reg_408 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_200_reg_439 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_199_reg_470 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_198_reg_501 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_197_reg_532 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_reg_1017 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_190_reg_1022 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_191_reg_1027 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_192_reg_1032 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_193_reg_1037 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_194_reg_1042 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_195_reg_1047 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_196_reg_1052 : STD_LOGIC_VECTOR (31 downto 0);
    signal sX_1_load_reg_1057 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln215_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln215_reg_1062 : STD_LOGIC_VECTOR (0 downto 0);
    signal sY_1_load_reg_1067 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln215_16_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln215_16_reg_1072 : STD_LOGIC_VECTOR (0 downto 0);
    signal pY_1_load_reg_1077 : STD_LOGIC_VECTOR (31 downto 0);
    signal pX_1_load_reg_1083 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln215_12_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_720_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_1093 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln532_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln532_reg_1098 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state11_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln532_12_fu_776_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln532_12_reg_1103 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln532_18_fu_784_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln532_18_reg_1108 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln532_18_reg_1108_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln532_18_reg_1108_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln532_18_reg_1108_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln532_18_reg_1108_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln532_18_reg_1108_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln532_18_reg_1108_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal ir_fu_795_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ir_reg_1118 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln544_fu_813_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln544_reg_1123 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln514_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1128 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1128_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1128_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1128_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1128_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1128_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1128_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1128_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1128_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1128_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1128_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1128_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1128_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln514_reg_1128_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal w31_V_load_reg_1142 : STD_LOGIC_VECTOR (14 downto 0);
    signal w31_V_load_reg_1142_pp0_iter2_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal w31_V_load_reg_1142_pp0_iter3_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal w31_V_load_reg_1142_pp0_iter4_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal w31_V_load_reg_1142_pp0_iter5_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal w31_V_load_reg_1142_pp0_iter6_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal w31_V_load_reg_1142_pp0_iter7_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_847_p2 : STD_LOGIC_VECTOR (2303 downto 0);
    signal lshr_ln532_reg_1147 : STD_LOGIC_VECTOR (2303 downto 0);
    signal trunc_ln532_fu_867_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln532_reg_1152 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_574_ap_return : STD_LOGIC_VECTOR (30 downto 0);
    signal p_0_reg_1157 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln521_fu_871_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal icmp_ln237_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln237_reg_1170 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state33 : BOOLEAN;
    signal select_ln252_fu_947_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln252_reg_1174 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln241_fu_966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln241_reg_1179 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln247_fu_987_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln247_reg_1183 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580_ap_start : STD_LOGIC;
    signal call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580_ap_done : STD_LOGIC;
    signal call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580_ap_idle : STD_LOGIC;
    signal call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580_ap_ready : STD_LOGIC;
    signal call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580_data_V_read : STD_LOGIC_VECTOR (255 downto 0);
    signal call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580_ap_return : STD_LOGIC_VECTOR (2303 downto 0);
    signal i_0_i22_reg_182 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal icmp_ln206_fu_1011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_ir1_0_i_i_i21_phi_fu_198_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_in_index_phi_fu_209_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_tmp_V_197_phi_fu_537_p16 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_V_198_phi_fu_506_p16 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_V_199_phi_fu_475_p16 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_V_200_phi_fu_444_p16 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_V_201_phi_fu_413_p16 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_V_202_phi_fu_382_p16 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_V_203_phi_fu_351_p16 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_V_204_phi_fu_320_p16 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_0_V_fu_912_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_tmp_V_204_reg_315 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln_fu_877_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_reg_pp0_iter14_tmp_V_203_reg_346 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_tmp_V_202_reg_377 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_tmp_V_201_reg_408 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_tmp_V_200_reg_439 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_tmp_V_199_reg_470 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_tmp_V_198_reg_501 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_tmp_V_197_reg_532 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge_i_phi_fu_567_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge_i_reg_563 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln532_fu_790_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln245_fu_971_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln250_fu_931_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_666_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_18_fu_686_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln215_17_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln215_18_fu_696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln215_11_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln215_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_218_fu_726_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_730_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_219_fu_738_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln532_fu_750_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln532_17_fu_762_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln532_16_fu_756_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln532_fu_768_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln544_fu_801_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln544_fu_807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_827_p4 : STD_LOGIC_VECTOR (2303 downto 0);
    signal grp_fu_847_p0 : STD_LOGIC_VECTOR (2303 downto 0);
    signal grp_fu_847_p1 : STD_LOGIC_VECTOR (2303 downto 0);
    signal zext_ln532_12_fu_853_p1 : STD_LOGIC_VECTOR (2303 downto 0);
    signal lshr_ln532_6_fu_856_p2 : STD_LOGIC_VECTOR (2303 downto 0);
    signal and_ln532_fu_862_p2 : STD_LOGIC_VECTOR (2303 downto 0);
    signal tmp_6_fu_887_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln703_fu_909_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_887_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln252_fu_942_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln247_fu_982_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_368 : BOOLEAN;
    signal ap_condition_377 : BOOLEAN;

    component product_dense_ap_fixed_ap_fixed_ap_fixed_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        a_V : IN STD_LOGIC_VECTOR (31 downto 0);
        w_V : IN STD_LOGIC_VECTOR (14 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_V_read : IN STD_LOGIC_VECTOR (255 downto 0);
        output_V_read : IN STD_LOGIC_VECTOR (2303 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (2303 downto 0) );
    end component;


    component myproject_axi_lshr_2304ns_12ns_2304_6_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        OP : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2303 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2303 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (2303 downto 0) );
    end component;


    component myproject_axi_mux_83_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_2d_cl_me_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_w3bWr IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;



begin
    w31_V_U : component conv_2d_cl_me_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_w3bWr
    generic map (
        DataWidth => 15,
        AddressRange => 576,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w31_V_address0,
        ce0 => w31_V_ce0,
        q0 => w31_V_q0);

    grp_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_574 : component product_dense_ap_fixed_ap_fixed_ap_fixed_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => trunc_ln532_reg_1152,
        w_V => w31_V_load_reg_1142_pp0_iter7_reg,
        ap_return => grp_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_574_ap_return);

    call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580 : component cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580_ap_start,
        ap_done => call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580_ap_done,
        ap_idle => call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580_ap_idle,
        ap_ready => call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580_ap_ready,
        data_V_read => call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580_data_V_read,
        output_V_read => layer_in_V_11,
        ap_return => call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580_ap_return);

    myproject_axi_lshr_2304ns_12ns_2304_6_1_U118 : component myproject_axi_lshr_2304ns_12ns_2304_6_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        OP => 1,
        din0_WIDTH => 2304,
        din1_WIDTH => 12,
        dout_WIDTH => 2304)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_847_p0,
        din1 => grp_fu_847_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_847_p2);

    myproject_axi_mux_83_32_1_1_U119 : component myproject_axi_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_V_19820_reg_216,
        din1 => tmp_V_19918_reg_227,
        din2 => tmp_V_20016_reg_238,
        din3 => tmp_V_20114_reg_249,
        din4 => tmp_V_20212_reg_260,
        din5 => tmp_V_20310_reg_271,
        din6 => tmp_V_2048_reg_282,
        din7 => tmp_V_2056_reg_293,
        din8 => tmp_6_fu_887_p9,
        dout => tmp_6_fu_887_p10);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln206_fu_1011_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln514_fu_821_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln215_12_fu_714_p2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln215_12_fu_714_p2))) then 
                    ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_i22_reg_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln206_fu_1011_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                i_0_i22_reg_182 <= i_reg_1093;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_i22_reg_182 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    in_index_reg_205_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1128 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_index_reg_205 <= select_ln544_reg_1123;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln215_12_fu_714_p2))) then 
                in_index_reg_205 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    ir1_0_i_i_i21_reg_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1128 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ir1_0_i_i_i21_reg_194 <= ir_reg_1118;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln215_12_fu_714_p2))) then 
                ir1_0_i_i_i21_reg_194 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    pX_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_368)) then
                if ((icmp_ln237_fu_926_p2 = ap_const_lv1_1)) then 
                    pX_1 <= ap_const_lv32_0;
                elsif ((icmp_ln237_fu_926_p2 = ap_const_lv1_0)) then 
                    pX_1 <= add_ln250_fu_931_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_377)) then
                if ((icmp_ln241_fu_966_p2 = ap_const_lv1_1)) then 
                    pY_1 <= ap_const_lv32_0;
                elsif ((icmp_ln241_fu_966_p2 = ap_const_lv1_0)) then 
                    pY_1 <= add_ln245_fu_971_p2;
                end if;
            end if; 
        end if;
    end process;

    phi_mul_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1128_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                phi_mul_reg_304 <= add_ln521_fu_871_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln215_12_fu_714_p2))) then 
                phi_mul_reg_304 <= ap_const_lv20_0;
            end if; 
        end if;
    end process;

    sX_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln237_reg_1170 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                sX_1 <= select_ln252_reg_1174;
            elsif ((not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_12_reg_1089))) and (ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln237_fu_926_p2 = ap_const_lv1_1))) then 
                sX_1 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    storemerge_i_reg_563_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_12_reg_1089))) and (ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln241_fu_966_p2 = ap_const_lv1_1) and (icmp_ln237_fu_926_p2 = ap_const_lv1_1))) then 
                storemerge_i_reg_563 <= ap_const_lv32_0;
            elsif (((icmp_ln241_reg_1179 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln237_reg_1170 = ap_const_lv1_1))) then 
                storemerge_i_reg_563 <= select_ln247_reg_1183;
            end if; 
        end if;
    end process;

    tmp_V_197_reg_532_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln_fu_877_p4 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_197_reg_532 <= acc_0_V_fu_912_p2;
            elsif ((((trunc_ln_fu_877_p4 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then 
                tmp_V_197_reg_532 <= tmp_V_19820_reg_216;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_197_reg_532 <= ap_phi_reg_pp0_iter14_tmp_V_197_reg_532;
            end if; 
        end if;
    end process;

    tmp_V_19820_reg_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1128_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_19820_reg_216 <= ap_phi_mux_tmp_V_197_phi_fu_537_p16;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln215_12_fu_714_p2))) then 
                tmp_V_19820_reg_216 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_V_198_reg_501_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln_fu_877_p4 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_198_reg_501 <= acc_0_V_fu_912_p2;
            elsif ((((trunc_ln_fu_877_p4 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then 
                tmp_V_198_reg_501 <= tmp_V_19918_reg_227;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_198_reg_501 <= ap_phi_reg_pp0_iter14_tmp_V_198_reg_501;
            end if; 
        end if;
    end process;

    tmp_V_19918_reg_227_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1128_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_19918_reg_227 <= ap_phi_mux_tmp_V_198_phi_fu_506_p16;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln215_12_fu_714_p2))) then 
                tmp_V_19918_reg_227 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_V_199_reg_470_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln_fu_877_p4 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_199_reg_470 <= acc_0_V_fu_912_p2;
            elsif ((((trunc_ln_fu_877_p4 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then 
                tmp_V_199_reg_470 <= tmp_V_20016_reg_238;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_199_reg_470 <= ap_phi_reg_pp0_iter14_tmp_V_199_reg_470;
            end if; 
        end if;
    end process;

    tmp_V_20016_reg_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1128_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_20016_reg_238 <= ap_phi_mux_tmp_V_199_phi_fu_475_p16;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln215_12_fu_714_p2))) then 
                tmp_V_20016_reg_238 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_V_200_reg_439_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln_fu_877_p4 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_200_reg_439 <= acc_0_V_fu_912_p2;
            elsif ((((trunc_ln_fu_877_p4 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then 
                tmp_V_200_reg_439 <= tmp_V_20114_reg_249;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_200_reg_439 <= ap_phi_reg_pp0_iter14_tmp_V_200_reg_439;
            end if; 
        end if;
    end process;

    tmp_V_20114_reg_249_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1128_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_20114_reg_249 <= ap_phi_mux_tmp_V_200_phi_fu_444_p16;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln215_12_fu_714_p2))) then 
                tmp_V_20114_reg_249 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_V_201_reg_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln_fu_877_p4 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_201_reg_408 <= acc_0_V_fu_912_p2;
            elsif ((((trunc_ln_fu_877_p4 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then 
                tmp_V_201_reg_408 <= tmp_V_20212_reg_260;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_201_reg_408 <= ap_phi_reg_pp0_iter14_tmp_V_201_reg_408;
            end if; 
        end if;
    end process;

    tmp_V_20212_reg_260_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1128_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_20212_reg_260 <= ap_phi_mux_tmp_V_201_phi_fu_413_p16;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln215_12_fu_714_p2))) then 
                tmp_V_20212_reg_260 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_V_202_reg_377_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln_fu_877_p4 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_202_reg_377 <= acc_0_V_fu_912_p2;
            elsif ((((trunc_ln_fu_877_p4 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then 
                tmp_V_202_reg_377 <= tmp_V_20310_reg_271;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_202_reg_377 <= ap_phi_reg_pp0_iter14_tmp_V_202_reg_377;
            end if; 
        end if;
    end process;

    tmp_V_20310_reg_271_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1128_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_20310_reg_271 <= ap_phi_mux_tmp_V_202_phi_fu_382_p16;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln215_12_fu_714_p2))) then 
                tmp_V_20310_reg_271 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_V_203_reg_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln_fu_877_p4 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_203_reg_346 <= acc_0_V_fu_912_p2;
            elsif ((((trunc_ln_fu_877_p4 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then 
                tmp_V_203_reg_346 <= tmp_V_2048_reg_282;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_203_reg_346 <= ap_phi_reg_pp0_iter14_tmp_V_203_reg_346;
            end if; 
        end if;
    end process;

    tmp_V_2048_reg_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1128_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_2048_reg_282 <= ap_phi_mux_tmp_V_203_phi_fu_351_p16;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln215_12_fu_714_p2))) then 
                tmp_V_2048_reg_282 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_V_204_reg_315_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((trunc_ln_fu_877_p4 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((trunc_ln_fu_877_p4 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then 
                tmp_V_204_reg_315 <= tmp_V_2056_reg_293;
            elsif (((trunc_ln_fu_877_p4 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_204_reg_315 <= acc_0_V_fu_912_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_204_reg_315 <= ap_phi_reg_pp0_iter14_tmp_V_204_reg_315;
            end if; 
        end if;
    end process;

    tmp_V_2056_reg_293_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln514_reg_1128_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
                tmp_V_2056_reg_293 <= ap_phi_mux_tmp_V_204_phi_fu_320_p16;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln215_12_fu_714_p2))) then 
                tmp_V_2056_reg_293 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                and_ln215_12_reg_1089 <= and_ln215_12_fu_714_p2;
                i_reg_1093 <= i_fu_720_p2;
                icmp_ln215_16_reg_1072 <= icmp_ln215_16_fu_656_p2;
                icmp_ln215_reg_1062 <= icmp_ln215_fu_646_p2;
                layer_in_V_11 <= call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580_ap_return;
                pX_1_load_reg_1083 <= pX_1;
                pY_1_load_reg_1077 <= pY_1;
                sX_1_load_reg_1057 <= sX_1;
                sY_1_load_reg_1067 <= sY_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_12_reg_1089))) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                icmp_ln237_reg_1170 <= icmp_ln237_fu_926_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_12_reg_1089))) and (ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln237_fu_926_p2 = ap_const_lv1_1))) then
                icmp_ln241_reg_1179 <= icmp_ln241_fu_966_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln514_reg_1128 <= icmp_ln514_fu_821_p2;
                icmp_ln514_reg_1128_pp0_iter1_reg <= icmp_ln514_reg_1128;
                icmp_ln532_reg_1098 <= icmp_ln532_fu_744_p2;
                select_ln532_12_reg_1103 <= select_ln532_12_fu_776_p3;
                    sub_ln532_18_reg_1108(11 downto 1) <= sub_ln532_18_fu_784_p2(11 downto 1);
                    sub_ln532_18_reg_1108_pp0_iter1_reg(11 downto 1) <= sub_ln532_18_reg_1108(11 downto 1);
                w31_V_load_reg_1142 <= w31_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln514_reg_1128_pp0_iter10_reg <= icmp_ln514_reg_1128_pp0_iter9_reg;
                icmp_ln514_reg_1128_pp0_iter11_reg <= icmp_ln514_reg_1128_pp0_iter10_reg;
                icmp_ln514_reg_1128_pp0_iter12_reg <= icmp_ln514_reg_1128_pp0_iter11_reg;
                icmp_ln514_reg_1128_pp0_iter13_reg <= icmp_ln514_reg_1128_pp0_iter12_reg;
                icmp_ln514_reg_1128_pp0_iter2_reg <= icmp_ln514_reg_1128_pp0_iter1_reg;
                icmp_ln514_reg_1128_pp0_iter3_reg <= icmp_ln514_reg_1128_pp0_iter2_reg;
                icmp_ln514_reg_1128_pp0_iter4_reg <= icmp_ln514_reg_1128_pp0_iter3_reg;
                icmp_ln514_reg_1128_pp0_iter5_reg <= icmp_ln514_reg_1128_pp0_iter4_reg;
                icmp_ln514_reg_1128_pp0_iter6_reg <= icmp_ln514_reg_1128_pp0_iter5_reg;
                icmp_ln514_reg_1128_pp0_iter7_reg <= icmp_ln514_reg_1128_pp0_iter6_reg;
                icmp_ln514_reg_1128_pp0_iter8_reg <= icmp_ln514_reg_1128_pp0_iter7_reg;
                icmp_ln514_reg_1128_pp0_iter9_reg <= icmp_ln514_reg_1128_pp0_iter8_reg;
                lshr_ln532_reg_1147 <= grp_fu_847_p2;
                p_0_reg_1157 <= grp_product_dense_ap_fixed_ap_fixed_ap_fixed_s_fu_574_ap_return;
                    sub_ln532_18_reg_1108_pp0_iter2_reg(11 downto 1) <= sub_ln532_18_reg_1108_pp0_iter1_reg(11 downto 1);
                    sub_ln532_18_reg_1108_pp0_iter3_reg(11 downto 1) <= sub_ln532_18_reg_1108_pp0_iter2_reg(11 downto 1);
                    sub_ln532_18_reg_1108_pp0_iter4_reg(11 downto 1) <= sub_ln532_18_reg_1108_pp0_iter3_reg(11 downto 1);
                    sub_ln532_18_reg_1108_pp0_iter5_reg(11 downto 1) <= sub_ln532_18_reg_1108_pp0_iter4_reg(11 downto 1);
                    sub_ln532_18_reg_1108_pp0_iter6_reg(11 downto 1) <= sub_ln532_18_reg_1108_pp0_iter5_reg(11 downto 1);
                trunc_ln532_reg_1152 <= trunc_ln532_fu_867_p1;
                w31_V_load_reg_1142_pp0_iter2_reg <= w31_V_load_reg_1142;
                w31_V_load_reg_1142_pp0_iter3_reg <= w31_V_load_reg_1142_pp0_iter2_reg;
                w31_V_load_reg_1142_pp0_iter4_reg <= w31_V_load_reg_1142_pp0_iter3_reg;
                w31_V_load_reg_1142_pp0_iter5_reg <= w31_V_load_reg_1142_pp0_iter4_reg;
                w31_V_load_reg_1142_pp0_iter6_reg <= w31_V_load_reg_1142_pp0_iter5_reg;
                w31_V_load_reg_1142_pp0_iter7_reg <= w31_V_load_reg_1142_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ir_reg_1118 <= ir_fu_795_p2;
                select_ln544_reg_1123 <= select_ln544_fu_813_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln237_reg_1170 = ap_const_lv1_1))) then
                sY_1 <= ap_phi_mux_storemerge_i_phi_fu_567_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_12_reg_1089))) and (icmp_ln241_fu_966_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln237_fu_926_p2 = ap_const_lv1_1))) then
                select_ln247_reg_1183 <= select_ln247_fu_987_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_12_reg_1089))) and (icmp_ln237_fu_926_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                select_ln252_reg_1174 <= select_ln252_fu_947_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_V_190_reg_1022 <= data_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_V_191_reg_1027 <= data_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                tmp_V_192_reg_1032 <= data_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                tmp_V_193_reg_1037 <= data_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                tmp_V_194_reg_1042 <= data_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                tmp_V_195_reg_1047 <= data_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                tmp_V_196_reg_1052 <= data_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_V_reg_1017 <= data_V_V_dout;
            end if;
        end if;
    end process;
    sub_ln532_18_reg_1108(0) <= '0';
    sub_ln532_18_reg_1108_pp0_iter1_reg(0) <= '0';
    sub_ln532_18_reg_1108_pp0_iter2_reg(0) <= '0';
    sub_ln532_18_reg_1108_pp0_iter3_reg(0) <= '0';
    sub_ln532_18_reg_1108_pp0_iter4_reg(0) <= '0';
    sub_ln532_18_reg_1108_pp0_iter5_reg(0) <= '0';
    sub_ln532_18_reg_1108_pp0_iter6_reg(0) <= '0';

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, data_V_V_empty_n, res_V_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, and_ln215_12_reg_1089, ap_CS_fsm_state10, and_ln215_12_fu_714_p2, ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter13, ap_CS_fsm_state34, icmp_ln206_fu_1011_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln215_12_fu_714_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state26 => 
                if (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                if (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                if (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                if (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                if (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                if ((not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_12_reg_1089))) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln206_fu_1011_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    acc_0_V_fu_912_p2 <= std_logic_vector(signed(sext_ln703_fu_909_p1) + signed(tmp_6_fu_887_p10));
    add_ln245_fu_971_p2 <= std_logic_vector(unsigned(pY_1_load_reg_1077) + unsigned(ap_const_lv32_1));
    add_ln247_fu_982_p2 <= std_logic_vector(unsigned(sY_1_load_reg_1067) + unsigned(ap_const_lv32_1));
    add_ln250_fu_931_p2 <= std_logic_vector(unsigned(pX_1_load_reg_1083) + unsigned(ap_const_lv32_1));
    add_ln252_fu_942_p2 <= std_logic_vector(unsigned(sX_1_load_reg_1057) + unsigned(ap_const_lv32_1));
    add_ln521_fu_871_p2 <= std_logic_vector(unsigned(ap_const_lv20_71D) + unsigned(phi_mul_reg_304));
    add_ln544_fu_801_p2 <= std_logic_vector(unsigned(ap_phi_mux_in_index_phi_fu_209_p4) + unsigned(ap_const_lv10_1));
    and_ln215_11_fu_708_p2 <= (icmp_ln215_18_fu_696_p2 and icmp_ln215_17_fu_676_p2);
    and_ln215_12_fu_714_p2 <= (and_ln215_fu_702_p2 and and_ln215_11_fu_708_p2);
    and_ln215_fu_702_p2 <= (icmp_ln215_fu_646_p2 and icmp_ln215_16_fu_656_p2);
    and_ln532_fu_862_p2 <= (lshr_ln532_reg_1147 and lshr_ln532_6_fu_856_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state26 <= ap_CS_fsm(11);
    ap_CS_fsm_state27 <= ap_CS_fsm(12);
    ap_CS_fsm_state28 <= ap_CS_fsm(13);
    ap_CS_fsm_state29 <= ap_CS_fsm(14);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(15);
    ap_CS_fsm_state31 <= ap_CS_fsm(16);
    ap_CS_fsm_state32 <= ap_CS_fsm(17);
    ap_CS_fsm_state33 <= ap_CS_fsm(18);
    ap_CS_fsm_state34 <= ap_CS_fsm(19);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;

        ap_block_state11_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state33_assign_proc : process(res_V_V_full_n, and_ln215_12_reg_1089)
    begin
                ap_block_state33 <= ((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_12_reg_1089));
    end process;


    ap_condition_368_assign_proc : process(res_V_V_full_n, ap_CS_fsm_state33, and_ln215_12_reg_1089)
    begin
                ap_condition_368 <= (not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_12_reg_1089))) and (ap_const_logic_1 = ap_CS_fsm_state33));
    end process;


    ap_condition_377_assign_proc : process(res_V_V_full_n, ap_CS_fsm_state33, and_ln215_12_reg_1089, icmp_ln237_fu_926_p2)
    begin
                ap_condition_377 <= (not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_12_reg_1089))) and (ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln237_fu_926_p2 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state34, icmp_ln206_fu_1011_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln206_fu_1011_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_in_index_phi_fu_209_p4_assign_proc : process(in_index_reg_205, ap_CS_fsm_pp0_stage0, select_ln544_reg_1123, icmp_ln514_reg_1128, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln514_reg_1128 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_in_index_phi_fu_209_p4 <= select_ln544_reg_1123;
        else 
            ap_phi_mux_in_index_phi_fu_209_p4 <= in_index_reg_205;
        end if; 
    end process;


    ap_phi_mux_ir1_0_i_i_i21_phi_fu_198_p4_assign_proc : process(ir1_0_i_i_i21_reg_194, ap_CS_fsm_pp0_stage0, ir_reg_1118, icmp_ln514_reg_1128, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln514_reg_1128 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_ir1_0_i_i_i21_phi_fu_198_p4 <= ir_reg_1118;
        else 
            ap_phi_mux_ir1_0_i_i_i21_phi_fu_198_p4 <= ir1_0_i_i_i21_reg_194;
        end if; 
    end process;


    ap_phi_mux_storemerge_i_phi_fu_567_p4_assign_proc : process(icmp_ln237_reg_1170, icmp_ln241_reg_1179, select_ln247_reg_1183, ap_CS_fsm_state34, storemerge_i_reg_563)
    begin
        if (((icmp_ln241_reg_1179 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln237_reg_1170 = ap_const_lv1_1))) then 
            ap_phi_mux_storemerge_i_phi_fu_567_p4 <= select_ln247_reg_1183;
        else 
            ap_phi_mux_storemerge_i_phi_fu_567_p4 <= storemerge_i_reg_563;
        end if; 
    end process;


    ap_phi_mux_tmp_V_197_phi_fu_537_p16_assign_proc : process(tmp_V_19820_reg_216, acc_0_V_fu_912_p2, trunc_ln_fu_877_p4, ap_phi_reg_pp0_iter14_tmp_V_197_reg_532)
    begin
        if ((trunc_ln_fu_877_p4 = ap_const_lv3_0)) then 
            ap_phi_mux_tmp_V_197_phi_fu_537_p16 <= acc_0_V_fu_912_p2;
        elsif (((trunc_ln_fu_877_p4 = ap_const_lv3_1) or (trunc_ln_fu_877_p4 = ap_const_lv3_2) or (trunc_ln_fu_877_p4 = ap_const_lv3_3) or (trunc_ln_fu_877_p4 = ap_const_lv3_4) or (trunc_ln_fu_877_p4 = ap_const_lv3_5) or (trunc_ln_fu_877_p4 = ap_const_lv3_6) or (trunc_ln_fu_877_p4 = ap_const_lv3_7))) then 
            ap_phi_mux_tmp_V_197_phi_fu_537_p16 <= tmp_V_19820_reg_216;
        else 
            ap_phi_mux_tmp_V_197_phi_fu_537_p16 <= ap_phi_reg_pp0_iter14_tmp_V_197_reg_532;
        end if; 
    end process;


    ap_phi_mux_tmp_V_198_phi_fu_506_p16_assign_proc : process(tmp_V_19918_reg_227, acc_0_V_fu_912_p2, trunc_ln_fu_877_p4, ap_phi_reg_pp0_iter14_tmp_V_198_reg_501)
    begin
        if ((trunc_ln_fu_877_p4 = ap_const_lv3_1)) then 
            ap_phi_mux_tmp_V_198_phi_fu_506_p16 <= acc_0_V_fu_912_p2;
        elsif (((trunc_ln_fu_877_p4 = ap_const_lv3_0) or (trunc_ln_fu_877_p4 = ap_const_lv3_2) or (trunc_ln_fu_877_p4 = ap_const_lv3_3) or (trunc_ln_fu_877_p4 = ap_const_lv3_4) or (trunc_ln_fu_877_p4 = ap_const_lv3_5) or (trunc_ln_fu_877_p4 = ap_const_lv3_6) or (trunc_ln_fu_877_p4 = ap_const_lv3_7))) then 
            ap_phi_mux_tmp_V_198_phi_fu_506_p16 <= tmp_V_19918_reg_227;
        else 
            ap_phi_mux_tmp_V_198_phi_fu_506_p16 <= ap_phi_reg_pp0_iter14_tmp_V_198_reg_501;
        end if; 
    end process;


    ap_phi_mux_tmp_V_199_phi_fu_475_p16_assign_proc : process(tmp_V_20016_reg_238, acc_0_V_fu_912_p2, trunc_ln_fu_877_p4, ap_phi_reg_pp0_iter14_tmp_V_199_reg_470)
    begin
        if ((trunc_ln_fu_877_p4 = ap_const_lv3_2)) then 
            ap_phi_mux_tmp_V_199_phi_fu_475_p16 <= acc_0_V_fu_912_p2;
        elsif (((trunc_ln_fu_877_p4 = ap_const_lv3_0) or (trunc_ln_fu_877_p4 = ap_const_lv3_1) or (trunc_ln_fu_877_p4 = ap_const_lv3_3) or (trunc_ln_fu_877_p4 = ap_const_lv3_4) or (trunc_ln_fu_877_p4 = ap_const_lv3_5) or (trunc_ln_fu_877_p4 = ap_const_lv3_6) or (trunc_ln_fu_877_p4 = ap_const_lv3_7))) then 
            ap_phi_mux_tmp_V_199_phi_fu_475_p16 <= tmp_V_20016_reg_238;
        else 
            ap_phi_mux_tmp_V_199_phi_fu_475_p16 <= ap_phi_reg_pp0_iter14_tmp_V_199_reg_470;
        end if; 
    end process;


    ap_phi_mux_tmp_V_200_phi_fu_444_p16_assign_proc : process(tmp_V_20114_reg_249, acc_0_V_fu_912_p2, trunc_ln_fu_877_p4, ap_phi_reg_pp0_iter14_tmp_V_200_reg_439)
    begin
        if ((trunc_ln_fu_877_p4 = ap_const_lv3_3)) then 
            ap_phi_mux_tmp_V_200_phi_fu_444_p16 <= acc_0_V_fu_912_p2;
        elsif (((trunc_ln_fu_877_p4 = ap_const_lv3_0) or (trunc_ln_fu_877_p4 = ap_const_lv3_1) or (trunc_ln_fu_877_p4 = ap_const_lv3_2) or (trunc_ln_fu_877_p4 = ap_const_lv3_4) or (trunc_ln_fu_877_p4 = ap_const_lv3_5) or (trunc_ln_fu_877_p4 = ap_const_lv3_6) or (trunc_ln_fu_877_p4 = ap_const_lv3_7))) then 
            ap_phi_mux_tmp_V_200_phi_fu_444_p16 <= tmp_V_20114_reg_249;
        else 
            ap_phi_mux_tmp_V_200_phi_fu_444_p16 <= ap_phi_reg_pp0_iter14_tmp_V_200_reg_439;
        end if; 
    end process;


    ap_phi_mux_tmp_V_201_phi_fu_413_p16_assign_proc : process(tmp_V_20212_reg_260, acc_0_V_fu_912_p2, trunc_ln_fu_877_p4, ap_phi_reg_pp0_iter14_tmp_V_201_reg_408)
    begin
        if ((trunc_ln_fu_877_p4 = ap_const_lv3_4)) then 
            ap_phi_mux_tmp_V_201_phi_fu_413_p16 <= acc_0_V_fu_912_p2;
        elsif (((trunc_ln_fu_877_p4 = ap_const_lv3_0) or (trunc_ln_fu_877_p4 = ap_const_lv3_1) or (trunc_ln_fu_877_p4 = ap_const_lv3_2) or (trunc_ln_fu_877_p4 = ap_const_lv3_3) or (trunc_ln_fu_877_p4 = ap_const_lv3_5) or (trunc_ln_fu_877_p4 = ap_const_lv3_6) or (trunc_ln_fu_877_p4 = ap_const_lv3_7))) then 
            ap_phi_mux_tmp_V_201_phi_fu_413_p16 <= tmp_V_20212_reg_260;
        else 
            ap_phi_mux_tmp_V_201_phi_fu_413_p16 <= ap_phi_reg_pp0_iter14_tmp_V_201_reg_408;
        end if; 
    end process;


    ap_phi_mux_tmp_V_202_phi_fu_382_p16_assign_proc : process(tmp_V_20310_reg_271, acc_0_V_fu_912_p2, trunc_ln_fu_877_p4, ap_phi_reg_pp0_iter14_tmp_V_202_reg_377)
    begin
        if ((trunc_ln_fu_877_p4 = ap_const_lv3_5)) then 
            ap_phi_mux_tmp_V_202_phi_fu_382_p16 <= acc_0_V_fu_912_p2;
        elsif (((trunc_ln_fu_877_p4 = ap_const_lv3_0) or (trunc_ln_fu_877_p4 = ap_const_lv3_1) or (trunc_ln_fu_877_p4 = ap_const_lv3_2) or (trunc_ln_fu_877_p4 = ap_const_lv3_3) or (trunc_ln_fu_877_p4 = ap_const_lv3_4) or (trunc_ln_fu_877_p4 = ap_const_lv3_6) or (trunc_ln_fu_877_p4 = ap_const_lv3_7))) then 
            ap_phi_mux_tmp_V_202_phi_fu_382_p16 <= tmp_V_20310_reg_271;
        else 
            ap_phi_mux_tmp_V_202_phi_fu_382_p16 <= ap_phi_reg_pp0_iter14_tmp_V_202_reg_377;
        end if; 
    end process;


    ap_phi_mux_tmp_V_203_phi_fu_351_p16_assign_proc : process(tmp_V_2048_reg_282, acc_0_V_fu_912_p2, trunc_ln_fu_877_p4, ap_phi_reg_pp0_iter14_tmp_V_203_reg_346)
    begin
        if ((trunc_ln_fu_877_p4 = ap_const_lv3_6)) then 
            ap_phi_mux_tmp_V_203_phi_fu_351_p16 <= acc_0_V_fu_912_p2;
        elsif (((trunc_ln_fu_877_p4 = ap_const_lv3_0) or (trunc_ln_fu_877_p4 = ap_const_lv3_1) or (trunc_ln_fu_877_p4 = ap_const_lv3_2) or (trunc_ln_fu_877_p4 = ap_const_lv3_3) or (trunc_ln_fu_877_p4 = ap_const_lv3_4) or (trunc_ln_fu_877_p4 = ap_const_lv3_5) or (trunc_ln_fu_877_p4 = ap_const_lv3_7))) then 
            ap_phi_mux_tmp_V_203_phi_fu_351_p16 <= tmp_V_2048_reg_282;
        else 
            ap_phi_mux_tmp_V_203_phi_fu_351_p16 <= ap_phi_reg_pp0_iter14_tmp_V_203_reg_346;
        end if; 
    end process;


    ap_phi_mux_tmp_V_204_phi_fu_320_p16_assign_proc : process(tmp_V_2056_reg_293, acc_0_V_fu_912_p2, ap_phi_reg_pp0_iter14_tmp_V_204_reg_315, trunc_ln_fu_877_p4)
    begin
        if (((trunc_ln_fu_877_p4 = ap_const_lv3_0) or (trunc_ln_fu_877_p4 = ap_const_lv3_1) or (trunc_ln_fu_877_p4 = ap_const_lv3_2) or (trunc_ln_fu_877_p4 = ap_const_lv3_3) or (trunc_ln_fu_877_p4 = ap_const_lv3_4) or (trunc_ln_fu_877_p4 = ap_const_lv3_5) or (trunc_ln_fu_877_p4 = ap_const_lv3_6))) then 
            ap_phi_mux_tmp_V_204_phi_fu_320_p16 <= tmp_V_2056_reg_293;
        elsif ((trunc_ln_fu_877_p4 = ap_const_lv3_7)) then 
            ap_phi_mux_tmp_V_204_phi_fu_320_p16 <= acc_0_V_fu_912_p2;
        else 
            ap_phi_mux_tmp_V_204_phi_fu_320_p16 <= ap_phi_reg_pp0_iter14_tmp_V_204_reg_315;
        end if; 
    end process;

    ap_phi_reg_pp0_iter14_tmp_V_197_reg_532 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter14_tmp_V_198_reg_501 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter14_tmp_V_199_reg_470 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter14_tmp_V_200_reg_439 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter14_tmp_V_201_reg_408 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter14_tmp_V_202_reg_377 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter14_tmp_V_203_reg_346 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter14_tmp_V_204_reg_315 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580_ap_start_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580_ap_start <= ap_const_logic_1;
        else 
            call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    call_ret_cnnshift_arr_ap_fixed_ap_fixed_32_16_5_3_0_config31_s_fu_580_data_V_read <= (((((((tmp_V_196_reg_1052 & tmp_V_195_reg_1047) & tmp_V_194_reg_1042) & tmp_V_193_reg_1037) & tmp_V_192_reg_1032) & tmp_V_191_reg_1027) & tmp_V_190_reg_1022) & tmp_V_reg_1017);

    data_V_V_blk_n_assign_proc : process(data_V_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            data_V_V_blk_n <= data_V_V_empty_n;
        else 
            data_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_V_read_assign_proc : process(data_V_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((data_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            data_V_V_read <= ap_const_logic_1;
        else 
            data_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    empty_218_fu_726_p1 <= ap_phi_mux_in_index_phi_fu_209_p4(7 - 1 downto 0);
    empty_219_fu_738_p2 <= (tmp_s_fu_730_p3 or ap_const_lv12_1F);
    grp_fu_847_p0 <= 
        tmp_19_fu_827_p4 when (icmp_ln532_reg_1098(0) = '1') else 
        layer_in_V_11;
    grp_fu_847_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln532_12_reg_1103),2304));
    i_fu_720_p2 <= std_logic_vector(unsigned(i_0_i22_reg_182) + unsigned(ap_const_lv6_1));
    icmp_ln206_fu_1011_p2 <= "1" when (i_0_i22_reg_182 = ap_const_lv6_23) else "0";
    icmp_ln215_16_fu_656_p2 <= "1" when (sY_1 = ap_const_lv32_2) else "0";
    icmp_ln215_17_fu_676_p2 <= "1" when (signed(tmp_17_fu_666_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln215_18_fu_696_p2 <= "1" when (signed(tmp_18_fu_686_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln215_fu_646_p2 <= "1" when (sX_1 = ap_const_lv32_2) else "0";
    icmp_ln237_fu_926_p2 <= "1" when (pX_1_load_reg_1083 = ap_const_lv32_5) else "0";
    icmp_ln241_fu_966_p2 <= "1" when (pY_1_load_reg_1077 = ap_const_lv32_5) else "0";
    icmp_ln514_fu_821_p2 <= "1" when (ap_phi_mux_ir1_0_i_i_i21_phi_fu_198_p4 = ap_const_lv10_23F) else "0";
    icmp_ln532_fu_744_p2 <= "1" when (unsigned(tmp_s_fu_730_p3) > unsigned(empty_219_fu_738_p2)) else "0";
    icmp_ln544_fu_807_p2 <= "1" when (unsigned(add_ln544_fu_801_p2) < unsigned(ap_const_lv10_48)) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state34, icmp_ln206_fu_1011_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln206_fu_1011_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ir_fu_795_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(ap_phi_mux_ir1_0_i_i_i21_phi_fu_198_p4));
    lshr_ln532_6_fu_856_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv2304_lc_3),to_integer(unsigned('0' & zext_ln532_12_fu_853_p1(31-1 downto 0)))));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_V_blk_n_assign_proc : process(res_V_V_full_n, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, and_ln215_12_reg_1089)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_state33) and (ap_const_lv1_1 = and_ln215_12_reg_1089)))) then 
            res_V_V_blk_n <= res_V_V_full_n;
        else 
            res_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_V_V_din_assign_proc : process(res_V_V_full_n, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, and_ln215_12_reg_1089, tmp_V_204_reg_315, tmp_V_203_reg_346, tmp_V_202_reg_377, tmp_V_201_reg_408, tmp_V_200_reg_439, tmp_V_199_reg_470, tmp_V_198_reg_501, tmp_V_197_reg_532)
    begin
        if ((not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_12_reg_1089))) and (ap_const_logic_1 = ap_CS_fsm_state33) and (ap_const_lv1_1 = and_ln215_12_reg_1089))) then 
            res_V_V_din <= tmp_V_204_reg_315;
        elsif (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            res_V_V_din <= tmp_V_203_reg_346;
        elsif (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            res_V_V_din <= tmp_V_202_reg_377;
        elsif (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            res_V_V_din <= tmp_V_201_reg_408;
        elsif (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            res_V_V_din <= tmp_V_200_reg_439;
        elsif (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            res_V_V_din <= tmp_V_199_reg_470;
        elsif (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            res_V_V_din <= tmp_V_198_reg_501;
        elsif (((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            res_V_V_din <= tmp_V_197_reg_532;
        else 
            res_V_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    res_V_V_write_assign_proc : process(res_V_V_full_n, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, and_ln215_12_reg_1089)
    begin
        if (((not(((res_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_1 = and_ln215_12_reg_1089))) and (ap_const_logic_1 = ap_CS_fsm_state33) and (ap_const_lv1_1 = and_ln215_12_reg_1089)) or ((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((res_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
            res_V_V_write <= ap_const_logic_1;
        else 
            res_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln247_fu_987_p3 <= 
        ap_const_lv32_2 when (icmp_ln215_16_reg_1072(0) = '1') else 
        add_ln247_fu_982_p2;
    select_ln252_fu_947_p3 <= 
        ap_const_lv32_2 when (icmp_ln215_reg_1062(0) = '1') else 
        add_ln252_fu_942_p2;
    select_ln532_12_fu_776_p3 <= 
        sub_ln532_16_fu_756_p2 when (icmp_ln532_fu_744_p2(0) = '1') else 
        tmp_s_fu_730_p3;
    select_ln532_fu_768_p3 <= 
        sub_ln532_fu_750_p2 when (icmp_ln532_fu_744_p2(0) = '1') else 
        sub_ln532_17_fu_762_p2;
    select_ln544_fu_813_p3 <= 
        add_ln544_fu_801_p2 when (icmp_ln544_fu_807_p2(0) = '1') else 
        ap_const_lv10_0;
        sext_ln703_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_0_reg_1157),32));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln532_16_fu_756_p2 <= std_logic_vector(signed(ap_const_lv12_8FF) - signed(tmp_s_fu_730_p3));
    sub_ln532_17_fu_762_p2 <= std_logic_vector(unsigned(empty_219_fu_738_p2) - unsigned(tmp_s_fu_730_p3));
    sub_ln532_18_fu_784_p2 <= std_logic_vector(signed(ap_const_lv12_8FF) - signed(select_ln532_fu_768_p3));
    sub_ln532_fu_750_p2 <= std_logic_vector(unsigned(tmp_s_fu_730_p3) - unsigned(empty_219_fu_738_p2));
    tmp_17_fu_666_p4 <= pY_1(31 downto 1);
    tmp_18_fu_686_p4 <= pX_1(31 downto 1);
    
    tmp_19_fu_827_p4_proc : process(layer_in_V_11)
    variable vlo_cpy : STD_LOGIC_VECTOR(2304+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(2304+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(2304 - 1 downto 0);
    variable tmp_19_fu_827_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(2304 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(2304 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(2304 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(12 - 1 downto 0) := ap_const_lv32_8FF(12 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(12 - 1 downto 0) := ap_const_lv32_0(12 - 1 downto 0);
        v0_cpy := layer_in_V_11;
        if (vlo_cpy(12 - 1 downto 0) > vhi_cpy(12 - 1 downto 0)) then
            vhi_cpy(12-1 downto 0) := std_logic_vector(2304-1-unsigned(ap_const_lv32_0(12-1 downto 0)));
            vlo_cpy(12-1 downto 0) := std_logic_vector(2304-1-unsigned(ap_const_lv32_8FF(12-1 downto 0)));
            for tmp_19_fu_827_p4_i in 0 to 2304-1 loop
                v0_cpy(tmp_19_fu_827_p4_i) := layer_in_V_11(2304-1-tmp_19_fu_827_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(12-1 downto 0)))));

        section := (others=>'0');
        section(12-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(12-1 downto 0)) - unsigned(vlo_cpy(12-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(2304-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_19_fu_827_p4 <= resvalue(2304-1 downto 0);
    end process;

    tmp_6_fu_887_p9 <= phi_mul_reg_304(19 downto 17);
    tmp_s_fu_730_p3 <= (empty_218_fu_726_p1 & ap_const_lv5_0);
    trunc_ln532_fu_867_p1 <= and_ln532_fu_862_p2(32 - 1 downto 0);
    trunc_ln_fu_877_p4 <= phi_mul_reg_304(19 downto 17);
    w31_V_address0 <= zext_ln532_fu_790_p1(10 - 1 downto 0);

    w31_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w31_V_ce0 <= ap_const_logic_1;
        else 
            w31_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln532_12_fu_853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln532_18_reg_1108_pp0_iter6_reg),2304));
    zext_ln532_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_ir1_0_i_i_i21_phi_fu_198_p4),64));
end behav;
