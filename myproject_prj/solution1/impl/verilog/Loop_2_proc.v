// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_2_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        out_r_TDATA,
        out_r_TVALID,
        out_r_TREADY,
        out_r_TLAST,
        out_local_V_V_dout,
        out_local_V_V_empty_n,
        out_local_V_V_read,
        is_last_0_loc_0_i_loc_dout,
        is_last_0_loc_0_i_loc_empty_n,
        is_last_0_loc_0_i_loc_read
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [31:0] out_r_TDATA;
output   out_r_TVALID;
input   out_r_TREADY;
output  [0:0] out_r_TLAST;
input  [31:0] out_local_V_V_dout;
input   out_local_V_V_empty_n;
output   out_local_V_V_read;
input  [0:0] is_last_0_loc_0_i_loc_dout;
input   is_last_0_loc_0_i_loc_empty_n;
output   is_last_0_loc_0_i_loc_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_local_V_V_read;
reg is_last_0_loc_0_i_loc_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    out_r_TDATA_blk_n;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    out_local_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln55_fu_129_p2;
reg    is_last_0_loc_0_i_loc_blk_n;
reg   [0:0] is_last_0_loc_0_i_loc_read_reg_418;
reg    ap_block_state1;
wire   [10:0] i_fu_135_p2;
reg   [10:0] i_reg_426;
wire    regslice_both_out_data_U_apdone_blk;
reg    ap_block_state2;
reg   [31:0] tmp_V_276_reg_431;
wire   [0:0] last_fu_147_p2;
reg   [0:0] last_reg_438;
reg   [0:0] p_Result_3_reg_443;
wire   [31:0] tmp_V_fu_160_p2;
reg   [31:0] tmp_V_reg_449;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln935_fu_165_p2;
reg   [0:0] icmp_ln935_reg_454;
wire    ap_CS_fsm_state4;
wire   [31:0] tmp_V_277_fu_170_p3;
reg   [31:0] tmp_V_277_reg_459;
reg   [31:0] l_fu_185_p3;
reg   [31:0] l_reg_467;
wire   [7:0] trunc_ln943_fu_193_p1;
reg   [7:0] trunc_ln943_reg_472;
wire   [31:0] sub_ln944_fu_197_p2;
reg   [31:0] sub_ln944_reg_477;
wire    ap_CS_fsm_state5;
wire   [5:0] trunc_ln947_fu_202_p1;
reg   [5:0] trunc_ln947_reg_484;
wire   [31:0] lsb_index_fu_206_p2;
reg   [31:0] lsb_index_reg_489;
wire    ap_CS_fsm_state6;
reg   [30:0] tmp_reg_496;
wire   [5:0] sub_ln947_fu_221_p2;
reg   [5:0] sub_ln947_reg_501;
wire   [31:0] add_ln958_fu_226_p2;
reg   [31:0] add_ln958_reg_506;
wire   [31:0] sub_ln958_fu_231_p2;
reg   [31:0] sub_ln958_reg_511;
wire   [31:0] or_ln_i_i_fu_298_p3;
reg   [31:0] or_ln_i_i_reg_516;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln958_fu_309_p2;
reg   [0:0] icmp_ln958_reg_526;
wire   [31:0] grp_fu_314_p2;
reg   [31:0] lshr_ln958_reg_536;
wire    ap_CS_fsm_state8;
wire   [63:0] grp_fu_321_p2;
reg   [63:0] shl_ln958_reg_541;
reg   [62:0] m_5_reg_546;
wire    ap_CS_fsm_state9;
reg   [0:0] tmp_37_reg_551;
wire   [7:0] select_ln964_fu_363_p3;
reg   [7:0] select_ln964_reg_556;
wire    ap_CS_fsm_state10;
reg   [10:0] i1_0_i_i_reg_118;
wire   [0:0] icmp_ln57_fu_141_p2;
reg   [31:0] p_Result_4_fu_175_p4;
wire   [31:0] zext_ln947_fu_241_p1;
wire   [31:0] lshr_ln947_fu_244_p2;
wire   [31:0] p_Result_s_fu_250_p2;
wire   [0:0] icmp_ln947_fu_236_p2;
wire   [0:0] icmp_ln947_1_fu_255_p2;
wire   [0:0] tmp_36_fu_267_p3;
wire   [0:0] p_Result_1_fu_280_p3;
wire   [0:0] xor_ln949_fu_274_p2;
wire   [0:0] and_ln949_fu_286_p2;
wire   [0:0] a_fu_261_p2;
wire   [0:0] or_ln949_fu_292_p2;
wire   [63:0] grp_fu_321_p0;
wire   [63:0] grp_fu_321_p1;
wire   [63:0] zext_ln958_fu_327_p1;
wire   [63:0] zext_ln961_fu_336_p1;
wire   [63:0] m_1_fu_330_p3;
wire   [63:0] m_2_fu_339_p2;
wire   [7:0] sub_ln964_fu_373_p2;
wire   [7:0] add_ln964_fu_378_p2;
wire   [63:0] m_6_fu_370_p1;
wire   [8:0] tmp_2170_i_i_fu_383_p3;
wire   [63:0] p_Result_5_fu_390_p5;
wire   [31:0] trunc_ln738_fu_402_p1;
wire   [31:0] bitcast_ln739_fu_406_p1;
reg   [11:0] ap_NS_fsm;
wire   [31:0] out_r_TDATA_int;
reg    out_r_TVALID_int;
wire    out_r_TREADY_int;
wire    regslice_both_out_data_U_vld_out;
wire    regslice_both_out_last_V_U_apdone_blk;
wire    regslice_both_out_last_V_U_ack_in_dummy;
wire    regslice_both_out_last_V_U_vld_out;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 12'd1;
end

myproject_axi_lshr_32ns_32ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_axi_lshr_32ns_32ns_32_2_1_U250(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_V_277_reg_459),
    .din1(add_ln958_reg_506),
    .ce(1'b1),
    .dout(grp_fu_314_p2)
);

myproject_axi_shl_64ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
myproject_axi_shl_64ns_32ns_64_2_1_U251(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_321_p0),
    .din1(grp_fu_321_p1),
    .ce(1'b1),
    .dout(grp_fu_321_p2)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(out_r_TDATA_int),
    .vld_in(out_r_TVALID_int),
    .ack_in(out_r_TREADY_int),
    .data_out(out_r_TDATA),
    .vld_out(regslice_both_out_data_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_data_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(last_reg_438),
    .vld_in(out_r_TVALID_int),
    .ack_in(regslice_both_out_last_V_U_ack_in_dummy),
    .data_out(out_r_TLAST),
    .vld_out(regslice_both_out_last_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((regslice_both_out_data_U_apdone_blk == 1'b1) | ((icmp_ln55_fu_129_p2 == 1'd0) & (out_local_V_V_empty_n == 1'b0))) & (icmp_ln55_fu_129_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((out_r_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        i1_0_i_i_reg_118 <= i_reg_426;
    end else if ((~((is_last_0_loc_0_i_loc_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i1_0_i_i_reg_118 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_454 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        add_ln958_reg_506 <= add_ln958_fu_226_p2;
        lsb_index_reg_489 <= lsb_index_fu_206_p2;
        sub_ln947_reg_501 <= sub_ln947_fu_221_p2;
        sub_ln958_reg_511 <= sub_ln958_fu_231_p2;
        tmp_reg_496 <= {{lsb_index_fu_206_p2[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_out_data_U_apdone_blk == 1'b1) | ((icmp_ln55_fu_129_p2 == 1'd0) & (out_local_V_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_426 <= i_fu_135_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        icmp_ln935_reg_454 <= icmp_ln935_fu_165_p2;
        l_reg_467 <= l_fu_185_p3;
        tmp_V_277_reg_459 <= tmp_V_277_fu_170_p3;
        trunc_ln943_reg_472 <= trunc_ln943_fu_193_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_454 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        icmp_ln958_reg_526 <= icmp_ln958_fu_309_p2;
        or_ln_i_i_reg_516[0] <= or_ln_i_i_fu_298_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((is_last_0_loc_0_i_loc_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        is_last_0_loc_0_i_loc_read_reg_418 <= is_last_0_loc_0_i_loc_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_out_data_U_apdone_blk == 1'b1) | ((icmp_ln55_fu_129_p2 == 1'd0) & (out_local_V_V_empty_n == 1'b0))) & (icmp_ln55_fu_129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        last_reg_438 <= last_fu_147_p2;
        p_Result_3_reg_443 <= out_local_V_V_dout[32'd31];
        tmp_V_276_reg_431 <= out_local_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_454 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        lshr_ln958_reg_536 <= grp_fu_314_p2;
        shl_ln958_reg_541 <= grp_fu_321_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_454 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        m_5_reg_546 <= {{m_2_fu_339_p2[63:1]}};
        tmp_37_reg_551 <= m_2_fu_339_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_454 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        select_ln964_reg_556[0] <= select_ln964_fu_363_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_454 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        sub_ln944_reg_477 <= sub_ln944_fu_197_p2;
        trunc_ln947_reg_484 <= trunc_ln947_fu_202_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((p_Result_3_reg_443 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_V_reg_449 <= tmp_V_fu_160_p2;
    end
end

always @ (*) begin
    if ((~((regslice_both_out_data_U_apdone_blk == 1'b1) | ((icmp_ln55_fu_129_p2 == 1'd0) & (out_local_V_V_empty_n == 1'b0))) & (icmp_ln55_fu_129_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_out_data_U_apdone_blk == 1'b1) | ((icmp_ln55_fu_129_p2 == 1'd0) & (out_local_V_V_empty_n == 1'b0))) & (icmp_ln55_fu_129_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        is_last_0_loc_0_i_loc_blk_n = is_last_0_loc_0_i_loc_empty_n;
    end else begin
        is_last_0_loc_0_i_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((is_last_0_loc_0_i_loc_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        is_last_0_loc_0_i_loc_read = 1'b1;
    end else begin
        is_last_0_loc_0_i_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln55_fu_129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_local_V_V_blk_n = out_local_V_V_empty_n;
    end else begin
        out_local_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regslice_both_out_data_U_apdone_blk == 1'b1) | ((icmp_ln55_fu_129_p2 == 1'd0) & (out_local_V_V_empty_n == 1'b0))) & (icmp_ln55_fu_129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_local_V_V_read = 1'b1;
    end else begin
        out_local_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        out_r_TDATA_blk_n = out_r_TREADY_int;
    end else begin
        out_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((out_r_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        out_r_TVALID_int = 1'b1;
    end else begin
        out_r_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((is_last_0_loc_0_i_loc_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((regslice_both_out_data_U_apdone_blk == 1'b1) | ((icmp_ln55_fu_129_p2 == 1'd0) & (out_local_V_V_empty_n == 1'b0))) & (icmp_ln55_fu_129_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((regslice_both_out_data_U_apdone_blk == 1'b1) | ((icmp_ln55_fu_129_p2 == 1'd0) & (out_local_V_V_empty_n == 1'b0))) & (icmp_ln55_fu_129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((out_r_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((out_r_TREADY_int == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_261_p2 = (icmp_ln947_fu_236_p2 & icmp_ln947_1_fu_255_p2);

assign add_ln958_fu_226_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_477));

assign add_ln964_fu_378_p2 = (sub_ln964_fu_373_p2 + select_ln964_reg_556);

assign and_ln949_fu_286_p2 = (xor_ln949_fu_274_p2 & p_Result_1_fu_280_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((is_last_0_loc_0_i_loc_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2 = ((regslice_both_out_data_U_apdone_blk == 1'b1) | ((icmp_ln55_fu_129_p2 == 1'd0) & (out_local_V_V_empty_n == 1'b0)));
end

assign bitcast_ln739_fu_406_p1 = trunc_ln738_fu_402_p1;

assign grp_fu_321_p0 = tmp_V_277_reg_459;

assign grp_fu_321_p1 = sub_ln958_reg_511;

assign i_fu_135_p2 = (i1_0_i_i_reg_118 + 11'd1);

assign icmp_ln55_fu_129_p2 = ((i1_0_i_i_reg_118 == 11'd1152) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_141_p2 = ((i1_0_i_i_reg_118 == 11'd1151) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_165_p2 = ((tmp_V_276_reg_431 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_255_p2 = ((p_Result_s_fu_250_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_236_p2 = (($signed(tmp_reg_496) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_309_p2 = (($signed(lsb_index_reg_489) > $signed(32'd0)) ? 1'b1 : 1'b0);


always @ (p_Result_4_fu_175_p4) begin
    if (p_Result_4_fu_175_p4[0] == 1'b1) begin
        l_fu_185_p3 = 32'd0;
    end else if (p_Result_4_fu_175_p4[1] == 1'b1) begin
        l_fu_185_p3 = 32'd1;
    end else if (p_Result_4_fu_175_p4[2] == 1'b1) begin
        l_fu_185_p3 = 32'd2;
    end else if (p_Result_4_fu_175_p4[3] == 1'b1) begin
        l_fu_185_p3 = 32'd3;
    end else if (p_Result_4_fu_175_p4[4] == 1'b1) begin
        l_fu_185_p3 = 32'd4;
    end else if (p_Result_4_fu_175_p4[5] == 1'b1) begin
        l_fu_185_p3 = 32'd5;
    end else if (p_Result_4_fu_175_p4[6] == 1'b1) begin
        l_fu_185_p3 = 32'd6;
    end else if (p_Result_4_fu_175_p4[7] == 1'b1) begin
        l_fu_185_p3 = 32'd7;
    end else if (p_Result_4_fu_175_p4[8] == 1'b1) begin
        l_fu_185_p3 = 32'd8;
    end else if (p_Result_4_fu_175_p4[9] == 1'b1) begin
        l_fu_185_p3 = 32'd9;
    end else if (p_Result_4_fu_175_p4[10] == 1'b1) begin
        l_fu_185_p3 = 32'd10;
    end else if (p_Result_4_fu_175_p4[11] == 1'b1) begin
        l_fu_185_p3 = 32'd11;
    end else if (p_Result_4_fu_175_p4[12] == 1'b1) begin
        l_fu_185_p3 = 32'd12;
    end else if (p_Result_4_fu_175_p4[13] == 1'b1) begin
        l_fu_185_p3 = 32'd13;
    end else if (p_Result_4_fu_175_p4[14] == 1'b1) begin
        l_fu_185_p3 = 32'd14;
    end else if (p_Result_4_fu_175_p4[15] == 1'b1) begin
        l_fu_185_p3 = 32'd15;
    end else if (p_Result_4_fu_175_p4[16] == 1'b1) begin
        l_fu_185_p3 = 32'd16;
    end else if (p_Result_4_fu_175_p4[17] == 1'b1) begin
        l_fu_185_p3 = 32'd17;
    end else if (p_Result_4_fu_175_p4[18] == 1'b1) begin
        l_fu_185_p3 = 32'd18;
    end else if (p_Result_4_fu_175_p4[19] == 1'b1) begin
        l_fu_185_p3 = 32'd19;
    end else if (p_Result_4_fu_175_p4[20] == 1'b1) begin
        l_fu_185_p3 = 32'd20;
    end else if (p_Result_4_fu_175_p4[21] == 1'b1) begin
        l_fu_185_p3 = 32'd21;
    end else if (p_Result_4_fu_175_p4[22] == 1'b1) begin
        l_fu_185_p3 = 32'd22;
    end else if (p_Result_4_fu_175_p4[23] == 1'b1) begin
        l_fu_185_p3 = 32'd23;
    end else if (p_Result_4_fu_175_p4[24] == 1'b1) begin
        l_fu_185_p3 = 32'd24;
    end else if (p_Result_4_fu_175_p4[25] == 1'b1) begin
        l_fu_185_p3 = 32'd25;
    end else if (p_Result_4_fu_175_p4[26] == 1'b1) begin
        l_fu_185_p3 = 32'd26;
    end else if (p_Result_4_fu_175_p4[27] == 1'b1) begin
        l_fu_185_p3 = 32'd27;
    end else if (p_Result_4_fu_175_p4[28] == 1'b1) begin
        l_fu_185_p3 = 32'd28;
    end else if (p_Result_4_fu_175_p4[29] == 1'b1) begin
        l_fu_185_p3 = 32'd29;
    end else if (p_Result_4_fu_175_p4[30] == 1'b1) begin
        l_fu_185_p3 = 32'd30;
    end else if (p_Result_4_fu_175_p4[31] == 1'b1) begin
        l_fu_185_p3 = 32'd31;
    end else begin
        l_fu_185_p3 = 32'd32;
    end
end

assign last_fu_147_p2 = (is_last_0_loc_0_i_loc_read_reg_418 & icmp_ln57_fu_141_p2);

assign lsb_index_fu_206_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_reg_477));

assign lshr_ln947_fu_244_p2 = 32'd4294967295 >> zext_ln947_fu_241_p1;

assign m_1_fu_330_p3 = ((icmp_ln958_reg_526[0:0] === 1'b1) ? zext_ln958_fu_327_p1 : shl_ln958_reg_541);

assign m_2_fu_339_p2 = (zext_ln961_fu_336_p1 + m_1_fu_330_p3);

assign m_6_fu_370_p1 = m_5_reg_546;

assign or_ln949_fu_292_p2 = (and_ln949_fu_286_p2 | a_fu_261_p2);

assign or_ln_i_i_fu_298_p3 = {{31'd0}, {or_ln949_fu_292_p2}};

assign out_r_TDATA_int = ((icmp_ln935_reg_454[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_406_p1);

assign out_r_TVALID = regslice_both_out_data_U_vld_out;

assign p_Result_1_fu_280_p3 = tmp_V_277_reg_459[lsb_index_reg_489];

integer ap_tvar_int_0;

always @ (tmp_V_277_fu_170_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_4_fu_175_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_4_fu_175_p4[ap_tvar_int_0] = tmp_V_277_fu_170_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_5_fu_390_p5 = {{m_6_fu_370_p1[63:32]}, {tmp_2170_i_i_fu_383_p3}, {m_6_fu_370_p1[22:0]}};

assign p_Result_s_fu_250_p2 = (tmp_V_277_reg_459 & lshr_ln947_fu_244_p2);

assign select_ln964_fu_363_p3 = ((tmp_37_reg_551[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sub_ln944_fu_197_p2 = (32'd32 - l_reg_467);

assign sub_ln947_fu_221_p2 = ($signed(6'd57) - $signed(trunc_ln947_reg_484));

assign sub_ln958_fu_231_p2 = (32'd25 - sub_ln944_reg_477);

assign sub_ln964_fu_373_p2 = (8'd16 - trunc_ln943_reg_472);

assign tmp_2170_i_i_fu_383_p3 = {{p_Result_3_reg_443}, {add_ln964_fu_378_p2}};

assign tmp_36_fu_267_p3 = lsb_index_reg_489[32'd31];

assign tmp_V_277_fu_170_p3 = ((p_Result_3_reg_443[0:0] === 1'b1) ? tmp_V_reg_449 : tmp_V_276_reg_431);

assign tmp_V_fu_160_p2 = (32'd0 - tmp_V_276_reg_431);

assign trunc_ln738_fu_402_p1 = p_Result_5_fu_390_p5[31:0];

assign trunc_ln943_fu_193_p1 = l_fu_185_p3[7:0];

assign trunc_ln947_fu_202_p1 = sub_ln944_fu_197_p2[5:0];

assign xor_ln949_fu_274_p2 = (tmp_36_fu_267_p3 ^ 1'd1);

assign zext_ln947_fu_241_p1 = sub_ln947_reg_501;

assign zext_ln958_fu_327_p1 = lshr_ln958_reg_536;

assign zext_ln961_fu_336_p1 = or_ln_i_i_reg_516;

always @ (posedge ap_clk) begin
    or_ln_i_i_reg_516[31:1] <= 31'b0000000000000000000000000000000;
    select_ln964_reg_556[7:1] <= 7'b0111111;
end

endmodule //Loop_2_proc
