// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module product_dense_ap_fixed_ap_fixed_ap_fixed_s (
        ap_clk,
        ap_rst,
        a_V,
        w_V,
        ap_return
);


input   ap_clk;
input   ap_rst;
input  [31:0] a_V;
input  [14:0] w_V;
output  [30:0] ap_return;

wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
wire    ap_block_pp0_stage0;
wire   [46:0] grp_fu_34_p2;
reg  signed [31:0] a_V_int_reg;
reg  signed [14:0] w_V_int_reg;

myproject_axi_mul_32s_15s_47_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 47 ))
myproject_axi_mul_32s_15s_47_5_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_V_int_reg),
    .din1(w_V_int_reg),
    .ce(1'b1),
    .dout(grp_fu_34_p2)
);

always @ (posedge ap_clk) begin
    a_V_int_reg <= a_V;
end

always @ (posedge ap_clk) begin
    w_V_int_reg <= w_V;
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_return = {{grp_fu_34_p2[46:16]}};

endmodule //product_dense_ap_fixed_ap_fixed_ap_fixed_s
